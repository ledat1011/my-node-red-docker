[
    {
        "id": "947fbc659352808f",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "50470e7e.8037e",
        "type": "tab",
        "label": "3.4.10 OBS_ReailTime_Data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6bbbadace53fbd6c",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e340b49803b5f8e1",
        "type": "tab",
        "label": "Realtime-data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fb66af5fb4c37143",
        "type": "tab",
        "label": "3.4.7 OBS_Upload_Data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "dfb4a60f.d788f8",
        "type": "ui_group",
        "name": "Data Export",
        "tab": "48418b79.0f5834",
        "order": 1,
        "disp": true,
        "width": "12"
    },
    {
        "id": "48418b79.0f5834",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0b989df99ad5ce73",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "8153342634cbaeaa",
        "type": "ui_group",
        "name": "TMS",
        "tab": "28f069bd0f62b451",
        "order": 2,
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "28f069bd0f62b451",
        "type": "ui_tab",
        "name": "TMS",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3d882eae.376e82",
        "type": "ui_group",
        "name": "Publish Message",
        "tab": "c6646016.404a",
        "order": 1,
        "disp": true,
        "width": "22",
        "collapse": true
    },
    {
        "id": "6e2ca8ae.a41228",
        "type": "mqtt-broker",
        "name": "",
        "broker": "${MQTT_SERVER}",
        "port": "${MQTT_PORT}",
        "clientid": "${MQTT_CLIENTID}",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": false,
        "birthTopic": "aemr_810001/disconnect",
        "birthQos": "2",
        "birthRetain": "false",
        "birthPayload": "connect",
        "birthMsg": {},
        "closeTopic": "aemr_810001/disconnect",
        "closeQos": "2",
        "closeRetain": "false",
        "closePayload": "disconnect",
        "closeMsg": {},
        "willTopic": "aemr_810001/disconnect",
        "willQos": "2",
        "willRetain": "false",
        "willPayload": "unexpected disconnection",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c6646016.404a",
        "type": "ui_tab",
        "name": "3.4.10 OBS - Realtime Data",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9d49dbb0c964b212",
        "type": "mqtt-broker",
        "name": "",
        "broker": "${MQTT_SERVER}",
        "port": "${MQTT_PORT}",
        "clientid": "${MQTT_CLIENTID}",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": false,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "997369405d6245fb",
        "type": "ui_group",
        "name": "OBS-Publish",
        "tab": "a1550a5cfb6f6a96",
        "order": 2,
        "disp": true,
        "width": "22",
        "collapse": false
    },
    {
        "id": "a1550a5cfb6f6a96",
        "type": "ui_tab",
        "name": "3.4.7 OBS - Upload Data",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7bab12a9.b04bcc",
        "type": "mqtt-broker",
        "name": "PI",
        "broker": "xxxx",
        "port": "1883",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "test/lwt/birth",
        "birthQos": "0",
        "birthPayload": "payload of test/lwt/birth",
        "birthMsg": {
            "contentType": "application/json",
            "userProps": "{\"prop\":\"birth-prop\"}",
            "respTopic": "test/lwt/birthResponse",
            "correl": "test/lwt/birth:Correl",
            "expiry": "60"
        },
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ca388eec2b28bc2a",
        "type": "ui_template",
        "z": "947fbc659352808f",
        "group": "8153342634cbaeaa",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html>\n\n<head>\n    <title>Employment Verification Form</title>\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700\" rel=\"stylesheet\">\n    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.5.0/css/all.css\"\n        integrity=\"sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU\" crossorigin=\"anonymous\">\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n    <style>\n        html,\n        body {\n            min-height: 100%;\n        }\n\n        body,\n        div,\n        form,\n        input,\n        label {\n            padding: 0;\n            margin: 0;\n            outline: none;\n            font-family: Roboto, Arial, sans-serif;\n            font-size: 13px;\n            color: #666;\n            line-height: 22px;\n        }\n\n        legend {\n            color: #fff;\n            background-color: #212529;\n            border-color: #32383e;\n            padding: 3px 5px;\n            font-size: 20px;\n        }\n\n        /*h1 {*/\n        /*    margin: 0;*/\n        /*    font-size: 36px;*/\n        /*    color: #fff;*/\n        /*    z-index: 2;*/\n        /*}*/\n\n        .testbox {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: inherit;\n            padding: 20px;\n        }\n\n        form {\n            width: 100%;\n            padding: 20px;\n            border-radius: 6px;\n            background: #fff;\n            box-shadow: 0 0 20px 0 #095484;\n        }\n\n        .banner {\n            position: relative;\n            height: 320px;\n            background-image: url(\"/uploads/media/default/0001/02/19ea6ba00def11fb8f5113a4d7555a97bd58ce3d.jpeg\");\n            background-size: cover;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            text-align: center;\n        }\n\n        .banner::after {\n            content: \"\";\n            background-color: rgba(0, 0, 0, 0.6);\n            position: absolute;\n            width: 100%;\n            height: 100%;\n        }\n\n        input {\n            margin-bottom: 10px;\n            border: 1px solid #ccc;\n            border-radius: 3px;\n        }\n\n        input {\n            width: calc(100% - 10px);\n            padding: 5px;\n        }\n\n        select {\n            width: 100%;\n            padding: 7px 0;\n            background: transparent;\n        }\n\n        input[type=\"date\"] {\n            padding: 4px 5px;\n        }\n\n        .item:hover p,\n        .item:hover i,\n        .question:hover p,\n        .question label:hover,\n        input:hover::placeholder {\n            color: #095484;\n        }\n\n        .item input:hover {\n            border: 1px solid transparent;\n            box-shadow: 0 0 6px 0 #095484;\n            color: #095484;\n        }\n\n        .item {\n            position: relative;\n            margin: 10px 0;\n        }\n\n        .item span {\n            color: red;\n        }\n\n        input[type=\"date\"]::-webkit-inner-spin-button {\n            display: none;\n        }\n\n        .item i,\n        input[type=\"date\"]::-webkit-calendar-picker-indicator {\n            position: absolute;\n            font-size: 20px;\n            color: #095484;\n        }\n\n        .item i {\n            right: 2%;\n            top: 30px;\n            z-index: 1;\n        }\n\n        [type=\"date\"]::-webkit-calendar-picker-indicator {\n            right: 1%;\n            z-index: 2;\n            opacity: 0;\n            cursor: pointer;\n        }\n\n        .question span {\n            margin-left: 30px;\n        }\n\n        .btn-block {\n            margin-top: 10px;\n            text-align: center;\n\n        }\n\n        button {\n            width: 150px;\n            padding: 10px;\n            border: none;\n            border-radius: 5px;\n            background: #095484;\n            font-size: 16px;\n            color: #fff;\n            cursor: pointer;\n            background-color: #28a745;\n            border-color: #28a745;\n        }\n\n        button:hover {\n            background: #28a745;\n        }\n\n        @media (min-width: 568px) {\n\n            .name-item,\n            .city-item {\n                display: flex;\n                flex-wrap: wrap;\n                justify-content: space-between;\n            }\n\n            .name-item input,\n            .city-item input,\n            .name-item div {\n                width: calc(50% - 20px);\n            }\n\n            .name-item div input {\n                width: 97%;\n            }\n\n            .name-item div label {\n                display: block;\n                padding-bottom: 5px;\n            }\n        }\n\n        .input,\n        .textarea {\n            border: 1px solid #ccc;\n            font-family: inherit;\n            font-size: inherit;\n            padding: 1px 6px;\n        }\n\n        .table {\n            width: 100%;\n            max-width: 100%;\n            margin-bottom: 1rem;\n            background-color: transparent;\n        }\n\n        table {\n            border-collapse: collapse;\n        }\n\n        *,\n        ::after,\n        ::before {\n            box-sizing: border-box;\n        }\n\n        table {\n            display: table;\n            border-collapse: separate;\n            box-sizing: border-box;\n            text-indent: initial;\n            border-spacing: 2px;\n            border-color: grey;\n        }\n\n        thead {\n            display: table-header-group;\n            vertical-align: middle;\n            border-color: inherit;\n        }\n\n        table {\n            border-collapse: collapse;\n        }\n\n        table {\n            border-collapse: separate;\n            text-indent: initial;\n            border-spacing: 2px;\n        }\n\n        .table .thead-dark th {\n            color: #fff;\n            background-color: #212529;\n            border-color: #32383e;\n        }\n\n        .table thead th {\n            vertical-align: bottom;\n            border-bottom: 2px solid #dee2e6;\n        }\n\n        .table td,\n        .table th {\n            padding: .75rem;\n            vertical-align: top;\n            border-top: 1px solid #dee2e6;\n        }\n\n        th {\n            text-align: inherit;\n        }\n\n\n\n        .table .thead-dark th {\n            color: #fff;\n            background-color: #212529;\n            border-color: #32383e;\n        }\n\n        .table thead th {\n            vertical-align: bottom;\n            border-bottom: 2px solid #dee2e6;\n        }\n\n        .table td,\n        .table th {\n            padding: .75rem;\n            vertical-align: top;\n            border-top: 1px solid #dee2e6;\n        }\n\n        th {\n            text-align: inherit;\n        }\n\n        *,\n        ::after,\n        ::before {\n            box-sizing: border-box;\n        }\n\n        user agent stylesheet th {\n            display: table-cell;\n            vertical-align: inherit;\n            font-weight: bold;\n            text-align: -internal-center;\n        }\n\n        table {\n            border-collapse: collapse;\n        }\n\n        #updateValueParameter,\n        #cancelValueParameter {\n            display: none;\n        }\n\n        #forminput1,\n        #save,\n        #close,\n        #open {\n            display: none;\n        }\n    </style>\n</head>\n\n<body>\n    <div style=\"display: flex;\">\n        <form style=\" display: block; overflow: auto;\" id=\"myForm\">\n            <h3>Config payload topic tms/status</h3>\n            <p>Description : <span style=\"font-weight: bold;\">Step 6 in figure 17 Send Command to TMS via OBS\n                    (PUBLISH({trainID}/tms/status,\"TMS_STATUS\"))</span></p>\n            <fieldset>\n                <legend>MQTT</legend>\n                <div class=\"name-item\">\n                    <div>\n                        <label for=\"tranid\">Tranid</label>\n                        <input style=\"width: 70%;\" id=\"tranid\" type=\"text\" name=\"topic\" required />\n                    </div>\n                    <div>\n                        <label for=\"topic\">Topic</label>\n                        <input style=\"width: 70%;\" id=\"topic\" type=\"text\" readonly placeholder=\"tms/status\" name=\"topic\"\n                            required />\n                    </div>\n                </div>\n                <div class=\"item\">\n                    <div class=\"item\">\n                        <div class=\"name-item\">\n                            <div>\n                                <label for=\"Qos\">Qos</label>\n                                <select style=\"width: 73%;\" id=\"qos\" name=\"qos\" required>\n                                    <option value=\"\"></option>\n                                    <option value=\"0\">0</option>\n                                    <option selected value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                </select>\n                            </div>\n                            <div>\n                                <label for=\"retainFlag\">RetainFlag</label>\n                                <select style=\"width: 73%;\" id=\"retainFlag\" , name=\"retainFlag\" required>\n                                    <option value=\"\"></option>\n                                    <option selected value=\"true\">True</option>\n                                    <option value=\"false\">False</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n            <br />\n            <fieldset>\n                <legend>Payload</legend>\n                <br />\n                <div class=\"name-item\">\n                    <div>\n                        <input type=\"checkbox\" id=\"checkedAuto\" checked style=\"width: 20px;\">Auto\n                        <input type=\"checkbox\" id=\"checkedManual\" style=\"width: 20px;\">Manual\n                        <label for=\"results\">Result</label>\n                        <!-- <input id=\"endpoint\" type=\"text\" name=\"endpoint\" required /> -->\n                        <select style=\"width: 73%;\" id=\"results\" , name=\"results\" required>\n                            <option value=\"\"></option>\n                            <option value=\"0\">0 : N/A</option>\n                            <option selected value=\"1\">1 : OK</option>\n                            <option value=\"2\">2 : Failure-Invalid</option>\n                            <option value=\"3\">3 : Failure-TCMS not available</option>\n                        </select>\n                    </div>\n                </div>\n                <br />\n                <label for=\"detail\">Detail</label>\n                <div id=\"formAuto\">\n                    <div>\n                        <input type=\"file\" style=\" width: 35%; \" id=\"selectFiles\" value=\"Import\" /><br />\n                    </div>\n                    <input type=\"button\" style=\" width: 10%; background-color:#28a745; color: #fff\" id=\"import\"\n                        value=\"import\">\n                    <input type=\"button\" style=\" display: none ; width: 10%; background-color:#dc3545; color: #fff\"\n                        id=\"clear\" value=\"clear\">\n                    <br />\n                    <textarea id=\"result\" style=\" width: 86.5%; height: 300px; resize: none; display: none;\"></textarea>\n                </div>\n                <div id=\"formManual\" style=\"display: none;\">\n                    <!-- <label for=\"detail\">Detail</label> -->\n                    <div>\n                        <input type=\"checkbox\" id=\"checked\" checked style=\"width: 20px;\">\n                        <label for=\"detail\">Check to send detail</label>\n                        <table class=\"table\">\n                            <thead class=\"thead-dark\">\n                                <tr>\n                                    <th scope=\"col\">variableName</th>\n                                    <th scope=\"col\">value</th>\n                                </tr>\n                            </thead>\n                            <tbody id=\"table-id\">\n\n                            </tbody>\n                        </table>\n                        <i id=\"open\" class=\"fas fa-plus-square\"></i>\n                        <i id=\"close\" class=\"fas fa-minus-square\"></i>\n                        <span id=\"spnText\"></span><span id=\"spnText1\"></span>\n                    </div>\n                    <div id=\"forminput1\">\n                        <fieldset>\n                            <div id=\"buildyourform2\">\n                                <br />\n                                variableName\n                                <input type=\"text\" class=\"fieldname\" id=\"variableName\">\n                                <br />\n                                value\n                                <input type=\"text\" class=\"fieldname1\" id=\"value\">\n\n                                <br />\n                            </div>\n                        </fieldset>\n                        <br />\n                    </div>\n                    <br>\n                    <button type=\"button\" id=\"save\">Add to Detail</button>\n                    <button type=\"button\" id=\"updateValueParameter\">Update</button>\n                    <button type=\"button\" id=\"cancelValueParameter\" style=\" color: #fff;background-color: #dc3545;\n                    border-color: #dc3545;\">Cancel</button>\n                </div>\n            </fieldset>\n            <div class=\"btn-block\">\n                <button id=\"submit\" style=\"display: none;\">Publish</button>\n                <button type=\"button\" id=\"save_log\">save log</button>\n                <!-- <button id=\"saveconfig\">Save config</button> -->\n            </div>\n        </form>\n    </div>\n    <script src=\"https://code.jquery.com/jquery-3.6.0.js\"\n        integrity=\"sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=\" crossorigin=\"anonymous\">\n        </script>\n    <script type=\"text/javascript\">\n        (function (scope) {\n            var topic = $(\"#topic\");\n            var tranid = $(\"#tranid\");\n            var qos = $(\"#qos\");\n            var retainFlag = $('#retainFlag');\n\n            var commandId = $('#commandId');\n            var result = $('#results');\n            var variableNameInputId = $('#variableName');\n            var valueInputId = $('#value');\n\n            let date_ob = new Date();\n            let date = (\"0\" + date_ob.getDate()).slice(-2);\n            let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n            let year = date_ob.getFullYear();\n            let hours = date_ob.getHours();\n            let minutes = date_ob.getMinutes();\n            let seconds = date_ob.getSeconds();\n            let millisecond = date_ob.getMilliseconds();\n            let datetime = (year + \"-\" + month + \"-\" + date + \" \" + hours + \":\" + minutes + \":\" + seconds + \".\" + millisecond)\n\n            var submitId = $(\"#submit\");\n            var saveButtonId = $(\"#save\");\n            var updateValueParameter = $(\"#updateValueParameter\");\n            var cancelValueParameter = $(\"#cancelValueParameter\");\n            var tableBodyId = $(\"#table-id\");\n            var checkBox = $(\"#checked\");\n            var nameEidted = \"\";\n            var detailLists = JSON.parse(localStorage.getItem(\"payloadTMS\")) || [];\n            var openInputform = $(\"#open\");\n            var closeInputform = $(\"#close\");\n            var checkedAuto = $(\"#checkedAuto\");\n            var checkedManual = $(\"#checkedManual\");\n            var detail = $(\"#result\");\n            var saveconfig = $(\"#saveconfig\");\n            var payloadDetail = null;\n\n            openInputform.click(function () {\n                document.getElementById(\"myForm\").reset();\n                $(\"#forminput1\").show();\n                $(\"#save\").show();\n                $(\"#close\").show();\n                $(\"#open\").hide();\n            });\n\n            closeInputform.click(function () {\n                $(\"#forminput1\").hide();\n                $(\"#save\").hide();\n                $(\"#close\").hide();\n                $(\"#open\").show();\n                $(\"#updateValueParameter\").hide();\n                $(\"#cancelValueParameter\").hide();\n                $('input.fieldname').prop('readonly', false);\n                variableNameInputId.val(\"\")\n                valueInputId.val(\"\")\n            });\n\n            cancelValueParameter.click(function () {\n                $('input.fieldname').prop('readonly', false);\n                variableNameInputId.val(\"\")\n                valueInputId.val(\"\")\n                $(\"#updateValueParameter\").hide();\n                $(\"#cancelValueParameter\").hide();\n                $(\"#save\").show();\n            });\n\n            $(\"#clear\").click(() => {\n                detail.val(\"\");\n                $('#selectFiles').val(\"\");\n                document.getElementById('result').style.display = \"none\";\n                $(\"#import\").show();\n                $(\"#clear\").hide();\n\n            })\n\n            var handleSaveClick = () => {\n                var newParamList = {};\n                if (checkBox.is(\":checked\")) {\n                    if (!variableNameInputId.val() || !valueInputId.val()) {\n                        $(\"#spnText\").html('PLEASE FILL FULL INPUT');\n                    } else {\n                        newParamList.variableName = variableNameInputId.val();\n                        newParamList.value = valueInputId.val();\n\n                        detailLists.push(newParamList);\n                        console.log(detailLists)\n\n                        localStorage.setItem(\"payloadTMS\", JSON.stringify(detailLists));\n                        addLastValueToTable(newParamList);\n                        reLoadAllTable()\n                        alert(\"ADD SUCCESS\")\n                        variableNameInputId.val(\"\")\n                        valueInputId.val(\"\")\n                        $(\"#spnText\").hide();\n                    }\n                }\n\n            }\n\n            var addLastValueToTable = (value) => {\n                var tableBodyValue = `\n                <tr >\n                    <td>${value.variableName}</td>\n                    <td>${value.value}</td>\n                </tr>\n                `\n                tableBodyId.append(tableBodyValue);\n            }\n\n            var reLoadAllTable = function () {\n                var tableBody = '';\n                detailLists.forEach((v, i) => {\n                    tableBody += `\n                <tr >\n                    <td>${v.variableName}</td>\n                    <td>${v.value}</td>\n                    <td style = \"width: 10px \"><i class=\"fas fa-pencil-alt btnSelect\"></i></td>\n                </tr>\n                `\n                });\n                tableBodyId.html(tableBody);\n            }\n\n            saveButtonId.on(\"click\", handleSaveClick);\n\n            $(document).ready(() => {\n                // localStorage.setItem(\"configPayload\", JSON.stringify(payload));\n                reLoadAllTable()\n            })\n\n            $(document).on(\"click\", \".btnSelect\", function () {\n                var indexOfValue = $(this).parent().parent().index()\n\n                var paramEdited = detailLists[indexOfValue];\n\n                nameEidted = paramEdited.variableName;\n\n                fillValueToFormEdit(paramEdited);\n                console.log(paramEdited);\n                $(\"#forminput1\").show();\n                $(\"#close\").show();\n                $(\"#open\").hide();\n                $(\"#updateValueParameter\").show();\n                $(\"#cancelValueParameter\").show();\n                $(\"#save\").hide();\n                $('input.fieldname').prop('readonly', true);\n\n            });\n\n            function fillValueToFormEdit(param) {\n                variableNameInputId.val(param.variableName);\n                valueInputId.val(param.value);\n            }\n\n            updateValueParameter.click(function () {\n                var variableName = variableNameInputId.val();\n                var value = valueInputId.val();\n\n                if (checkBox.is(\":checked\")) {\n                    if (!variableNameInputId.val() || !valueInputId.val()) {\n                        $(\"#spnText\").html('PLEASE FILL FULL INPUT');\n                    } else {\n                        detailLists.find((v, i) => {\n                            if (v.variableName == nameEidted) {\n                                detailLists[i] = {\n                                    variableName: variableName,\n                                    value: value\n                                }\n                                return true; // stop searching\n                            }\n                        })\n                        console.log(detailLists);\n                        localStorage.setItem(\"payloadTMS\", JSON.stringify(detailLists));\n                        alert(\"UPDATE SUCCESS\")\n                        reLoadAllTable();\n                        $(\"#updateValueParameter\").hide();\n                        $(\"#cancelValueParameter\").hide();\n                        $(\"#save\").show();\n                        variableNameInputId.val(\"\")\n                        valueInputId.val(\"\")\n                    }\n                }\n\n\n\n\n            })\n\n            tranid.keyup(() => {\n                $(\"#topic\").val(tranid.val() + \"/tms/status\");\n\n            })\n\n            checkBox.click(function () {\n                if ($(this).is(\":checked\")) {\n                    tableBodyId.show();\n                    $(\"#buildyourform2\").show();\n                    openInputform.show();\n                } else {\n                    tableBodyId.hide();\n                    $(\"#buildyourform2\").hide();\n                    openInputform.hide();\n                }\n            });\n\n            checkedAuto.click(function () {\n                if ($(this).is(\":checked\")) {\n                    $(\"#formManual\").hide();\n                    checkedManual.prop(\"checked\", false);\n                    $(\"#formAuto\").show();\n                    saveconfig.show();\n                    submitId.hide();\n                } else {\n                    $(\"#formManual\").show();\n                    checkedManual.prop(\"checked\", true);\n                    $(\"#formAuto\").hide();\n                    saveconfig.hide();\n                    submitId.show();\n                }\n            });\n\n            checkedManual.click(function () {\n                if ($(this).is(\":checked\")) {\n                    $(\"#formManual\").show();\n                    checkedAuto.prop(\"checked\", false);\n                    $(\"#formAuto\").hide();\n                    saveconfig.hide();\n                    submitId.show();\n                } else {\n                    $(\"#formManual\").hide();\n                    checkedAuto.prop(\"checked\", true);\n                    $(\"#formAuto\").show();\n                    saveconfig.show();\n                    submitId.hide();\n                }\n            });\n\n            document.getElementById('import').onclick = function () {\n                var files = document.getElementById('selectFiles').files;\n\n                if (files.length <= 0) {\n                    return false;\n                } else {\n                    document.getElementById('result').style.display = \"block\";\n                    var fr = new FileReader();\n\n                    fr.onload = function (e) {\n                        try {\n                            var result = JSON.parse(e.target.result);\n                            var formatted = JSON.stringify(result, null, 2);\n                            console.log(result);\n                            console.log(formatted);\n                            document.getElementById('result').style.display = \"\"\n                            document.getElementById('result').value = formatted;\n                            payloadDetail = formatted;\n                            console.log(payloadDetail);\n                        } catch (error) {\n                            document.getElementById('result').style.display = \"none\"\n                            console.log(e);\n                            alert(error);\n                        }\n\n                    }\n                    fr.readAsText(files.item(0));\n                    $(\"#import\").hide();\n                    $(\"#clear\").show();\n                }\n\n            };\n\n            saveconfig.click(() => {\n                if (topic.val() == \"\" || qos.val() == \"\" || retainFlag.val() == \"\" || result.val() == \"\") {\n                    alert(\"fail\")\n                }\n                else {\n                    if (payloadDetail == null || document.getElementById('result').style.display == \"none\") {\n                        scope.send({ qos: qos.val(), retainFlag: retainFlag.val(), payload: { ts: datetime, commandId: Date.now() & 0xFFFFFFF, result: parseInt(result.val()), detail: [] }, auto: \"auto\" })\n                        // console.log({ topic: topic.val(), qos: qos.val(), retainFlag: retainFlag.val(), payload: { ts: datetime, commandId: Date.now() & 0xFFFFFFF, result: parseInt(result.val()), detail: [] }, auto: \"auto\" });\n                        alert(\"config success\")\n                    } else {\n                        scope.send({ qos: qos.val(), retainFlag: retainFlag.val(), payload: { ts: datetime, commandId: Date.now() & 0xFFFFFFF, result: parseInt(result.val()), detail: JSON.parse(document.getElementById('result').value) }, auto: \"auto\" })\n                        // console.log({ topic: topic.val(), qos: qos.val(), retainFlag: retainFlag.val(), payload: { ts: datetime, commandId: Date.now() & 0xFFFFFFF, result: parseInt(result.val()), detail: JSON.parse(document.getElementById('result').value) }, auto: \"auto\" });\n                        alert(\"config success\")\n                    }\n                }\n            })\n\n            submitId.click(() => {\n\n                // var myJson = { ts: datetime, commandId: Date.now() & 0xFFFFFFF, result: parseInt(result.val()) }\n\n                if (topic.val() == \"\" || qos.val() == \"\" || retainFlag.val() == \"\" || result.val() == \"\") {\n                    alert(\"fail\")\n                }\n                else {\n                    var myJson = { ts: datetime, commandId: Date.now() & 0xFFFFFFF, result: parseInt(result.val()) }\n                    if (checkBox.is(\":checked\")) {\n                        myJson.detail = detailLists;\n                        scope.send({ topic: topic.val(), qos: qos.val(), retainFlag: retainFlag.val(), payload: myJson })\n                        // console.log({ topic: topic.val(), qos: qos.val(), retainFlag: retainFlag.val(), payload: myJson });\n                        alert(\"publish success\")\n                    } else {\n                        myJson.detail = [];\n                        scope.send({ topic: topic.val(), qos: qos.val(), retainFlag: retainFlag.val(), payload: myJson })\n                        // console.log({ topic: topic.val(), qos: qos.val(), retainFlag: retainFlag.val(), payload: myJson });\n                        alert(\"publish success\")\n                    }\n                }\n\n            })\n\n            $(\"#save_log\").click(() => {\n\n                console.log(detailLists);\n                $.ajax({\n                    url: \"/tms-log\",\n                    type: \"POST\",\n                    contentType: 'application/json',\n                    data: JSON.stringify(detailLists),\n                    cache: false,\n                    success: function (res) {\n                        console.log(res);\n                       if(res.status){\n                           window.location.href =\"/tms-log.log\";\n                       }else{\n                           console.log(res);\n                       }\n\n\n                    }\n                });\n            })\n\n        })(scope);\n\n\n    </script>\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 900,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "fdeb5dda54adf226",
        "type": "http in",
        "z": "947fbc659352808f",
        "name": "",
        "url": "/tms-log",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 250,
        "y": 400,
        "wires": [
            [
                "d8feac723a08b07a"
            ]
        ]
    },
    {
        "id": "d8feac723a08b07a",
        "type": "function",
        "z": "947fbc659352808f",
        "name": "",
        "func": "try {\n    var payload = msg.payload;\n    msg.payload ={};\n    msg.payload.status =true;\n    msg.payload.data = payload;\n    global.set(\"TMSPayload\",payload);\n    return msg;\n    \n}catch(e){\n    msg.payload ={};\n    msg.payload.status = false;\n    \n    msg.payload.error = e + \"\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 400,
        "wires": [
            [
                "1600e9d0ae283e4a"
            ]
        ]
    },
    {
        "id": "1600e9d0ae283e4a",
        "type": "http response",
        "z": "947fbc659352808f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 400,
        "wires": []
    },
    {
        "id": "56928029910b393b",
        "type": "http response",
        "z": "947fbc659352808f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 660,
        "wires": []
    },
    {
        "id": "89109b9a01113778",
        "type": "http in",
        "z": "947fbc659352808f",
        "name": "",
        "url": "/tms-log.log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 640,
        "y": 660,
        "wires": [
            [
                "690af38782c2ed8b"
            ]
        ]
    },
    {
        "id": "690af38782c2ed8b",
        "type": "function",
        "z": "947fbc659352808f",
        "name": "",
        "func": "msg.payload = global.get(\"TMSPayload\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 660,
        "wires": [
            [
                "56928029910b393b"
            ]
        ]
    },
    {
        "id": "1a87c238da11f233",
        "type": "mqtt in",
        "z": "947fbc659352808f",
        "name": "",
        "topic": "abc",
        "qos": "2",
        "datatype": "auto",
        "broker": "6e2ca8ae.a41228",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 120,
        "wires": [
            [
                "67a48f63a20ba5e4"
            ]
        ]
    },
    {
        "id": "67a48f63a20ba5e4",
        "type": "debug",
        "z": "947fbc659352808f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 120,
        "wires": []
    },
    {
        "id": "3a1f6863.792a28",
        "type": "ui_template",
        "z": "50470e7e.8037e",
        "group": "3d882eae.376e82",
        "name": "",
        "order": 6,
        "width": "22",
        "height": "19",
        "format": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <title>Title</title>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n    <script src=\"https://code.jquery.com/jquery-3.6.0.js\"\n        integrity=\"sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/fflate/umd/index.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pako/2.0.4/pako.min.js\"\n        integrity=\"sha512-EAKzSKex+PXC0U9OG13r1059ysjrjkJEpZoONCnZa0mBROY28iBOOxZSErUVw1LzLr2+U5PhR7zPCPKidUVJqg==\"\n        crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\n\n    <style>\n        .formInput {\n            position: absolute;\n            top: 0%;\n            /* left: 50%; */\n            /* margin-top: -100px; */\n            /* margin-left: -250px; */\n            width: 100%;\n            height: 200px;\n            border: 4px dashed rgb(92, 89, 89);\n            transition: 0.4s;\n        }\n\n        .formInput:hover {\n            background-color: rgb(205 226 242);\n        }\n\n        .formInput #textHolder {\n            width: 100%;\n            height: 100%;\n            text-align: center;\n            line-height: 170px;\n            color: rgb(92, 89, 89);\n            font-family: Arial;\n            background-color: unset;\n        }\n\n        .formInput input {\n            position: absolute;\n            margin: 0;\n            padding: 0;\n            width: 100%;\n            height: 100%;\n            outline: none;\n            opacity: 0;\n        }\n\n        .formInput button {\n            margin: 0;\n            color: #fff;\n            background: #16a085;\n            border: none;\n            width: 508px;\n            height: 35px;\n            margin-top: -20px;\n            margin-left: -4px;\n            border-radius: 4px;\n            border-bottom: 4px solid #117A60;\n            transition: all .2s ease;\n            outline: none;\n        }\n\n        .formInput button:hover {\n            background: #149174;\n            color: #0C5645;\n        }\n\n        .formInput button:active {\n            border: 0;\n        }\n\n        .drag-file {\n            position: relative;\n            width: 100;\n            height: 200px;\n        }\n\n        .my-custom-scrollbar {\n            position: relative;\n            height: 200px;\n            overflow: auto;\n        }\n\n        .table-wrapper-scroll-y {\n            display: block;\n        }\n\n        .or-seperator {\n            margin-top: 20px;\n            text-align: center;\n            border-top: 1px solid #ccc;\n        }\n\n        .or-seperator i {\n            cursor: pointer;\n            padding: 0 10px;\n            background: #f7f7f7;\n            position: relative;\n            top: -11px;\n            z-index: 1;\n            transition: 0.4s;\n\n        }\n\n        .or-seperator i:hover {\n            background: #dbdada;\n\n\n        }\n\n        .or-seperator i.arrow {\n            padding: 0 10px;\n            background: #f7f7f7;\n            position: relative;\n            top: -11px;\n            z-index: 1;\n\n        }\n\n\n        .error-border {\n            border-color: red;\n        }\n\n        .error-color {\n            color: red;\n        }\n\n        #publishTimeError {\n            top: -15px;\n            z-index: 3;\n        }\n\n        .help-block {\n            display: block;\n            margin-top: 2px;\n            margin-bottom: 10px;\n            color: #a94442;\n            font-size: 15px;\n        }\n\n        .form-mqtt {\n            border: 1px solid black;\n        }\n\n        #selectTopic {\n            border: 1px dashed #ccc;\n            display: flex;\n            justify-content: center;\n        }\n\n        #selectTopic i {\n            cursor: pointer;\n            padding: 0 10px;\n            background: white;\n            position: absolute;\n            top: -11px;\n            z-index: 1;\n            transition: 0.4s;\n        }\n\n        @media (min-width: 576px) {\n            #selectTopic {\n\n                padding: 10px 0 10px 0;\n\n            }\n        }\n\n        @media (min-width: 768px) {\n            /* .select {\n               width: 50%;\n           } */\n        }\n\n        @media (min-width: 200px) {\n            #selectTopic {\n\n                padding: 10px 0 10px 0;\n\n            }\n        }\n\n        /* div.wrap {\n            width: 500px;\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            vertical-align: middle;\n        } */\n\n        div.wrap div {\n            position: relative;\n        }\n\n\n        div.wrap div label {\n\n            position: absolute;\n            top: 0;\n            font-size: 15px;\n            margin: 10px;\n            padding: 0 10px;\n            -webkit-transition: top .2s ease-in-out,\n                font-size .2s ease-in-out;\n            transition: top .2s ease-in-out,\n                font-size .2s ease-in-out;\n        }\n\n        div.wrap div input[type=number] {\n            width: 100%;\n            padding: 5px;\n\n            /* font-size: 20px; */\n\n\n        }\n\n        div.wrap div input[type=number]:focus {\n            outline: none;\n        }\n\n        .active {\n            top: -25px !important;\n            font-size: 12px !important;\n            background-color: white;\n        }\n\n\n        /*.optional-config {*/\n        /*    overflow: hidden;*/\n        /*    display: none;*/\n        /*    transform: translateY(-100%);*/\n        /*    transition: transform 0.3s ease-out;*/\n        /*}*/\n\n        /*.optional-config.open {*/\n        /*    display: flex;*/\n        /*    pointer-events: visible;*/\n        /*    opacity: 1;*/\n        /*    transform: translateY(0);*/\n        /*}*/\n    </style>\n</head>\n\n<body>\n    <div class=\"container\">\n\n        <!-- <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"or-seperator\">\n                    <i id=\"mqtt-config-lable\">MQTT Config\n                        <span class=\"arrow\">&#8659;</span>\n                    </i>\n\n\n                </div>\n            </div>\n        </div>\n        <div class=\"row \" style=\"display: none;\" id=\"mqtt-config-form\">\n            <div class=\"col-sm-12 justify-content-center\">\n                <form class=\"form-inline\" action=\"/action_page.php\">\n                    <label for=\"email\" class=\"mr-sm-2\">User name: </label>\n                    <input type=\"email\" class=\"form-control mb-2 mr-sm-2\" value=\"admin\" placeholder=\"User name\"\n                        id=\"mqttEmail\">\n                    <label for=\"pwd\" class=\"mr-sm-2\">Password:</label>\n                    <input type=\"password\" class=\"form-control mb-2 mr-sm-2\" value=\"admin\" placeholder=\"Password\"\n                        id=\"mqttPassWord\">\n\n                </form>\n            </div>\n        </div> -->\n\n        <!-- test file -->\n        <!-- \n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"or-seperator\">\n                    <i id=\"Test-config-lable\">Test Config\n                        <span class=\"arrow\">&#8659;</span>\n                    </i>\n\n\n                </div>\n            </div>\n        </div>\n        <div class=\"row pb-5\" style=\"display: none;\" id=\"test-form\">\n            <div class=\"col-sm-6 border-right border-dark \">\n                <h3 class=\"text-center\">Choose File Config</h3>\n                <div class=\"row wrap mt-3\">\n                    <div class=\"col-sm-6\">\n                        <label class=\"active\" for=\"signalCodeColumnIndex\">signalCodeColumnIndex</label>\n                        <input id=\"signalCodeColumnIndex\" type=\"number\" />\n                    </div>\n                    <div class=\"col-sm-6\">\n                        <label class=\"active\" for=\"bitLengthColumnIndex\">bitLengthColumnIndex</label>\n                        <input id=\"bitLengthColumnIndex\" type=\"number\" />\n                    </div>\n\n                    <div class=\"col-sm-6 mt-5\">\n                        <label class=\"active\" for=\"valueTypeColumnIndex\">valueTypeColumnIndex</label>\n                        <input id=\"valueTypeColumnIndex\" type=\"number\" />\n                    </div>\n                    <div class=\"col-sm-6 mt-5\">\n                        <label class=\"active\" for=\"scalingFactorColumnIndex\">scalingFactorColumnIndex</label>\n                        <input id=\"scalingFactorColumnIndex\" type=\"number\" />\n                    </div>\n                </div>\n                <div class=\"col-sm-12 mt-5\">\n                    <span>Select local CSV File:</span>\n                    <input accept=\".csv\" id=\"csv\" type=\"file\">\n                </div>\n\n\n            </div>\n\n            <div class=\"col-sm-6 \">\n                <h3 class=\"text-center\">Choose File Data</h3>\n                <div class=\"row wrap mt-3\">\n                    <div class=\"col-sm-6\">\n                        <label class=\"active\" for=\"rtdSignalCodeColumnIndex\">SignalCodeColumnIndex</label>\n                        <input id=\"rtdSignalCodeColumnIndex\" type=\"number\" />\n                    </div>\n                    <div class=\"col-sm-6\">\n                        <label class=\"active\" for=\"rtdStartDataRowIndex\">StartDataRowIndex</label>\n                        <input id=\"rtdStartDataRowIndex\" type=\"number\" />\n                    </div>\n\n                    <div class=\"col-sm-12 mt-5\">\n\n                        <label class=\"active\" for=\"rtdStartTimeColumnIndex\">StartTimeColumnIndex</label>\n                        <input id=\"rtdStartTimeColumnIndex\" type=\"number\" />\n\n                    </div>\n\n                </div>\n                <div class=\"col-sm-12 mt-5\">\n                    <span>Select local Excel File:</span>\n                    <input id=\"excel\" onclick=\"this.value=null;\"\n                        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                        type=\"file\">\n\n                </div>\n\n\n            </div>\n\n\n            <div class=\"col-sm-12 mt-3\">\n\n                <button id=\"compare\" class=\"btn btn-info w-100\">Compare</button>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\" id=\"showErrorList\">\n\n\n            </div>\n        </div> -->\n        <div class=\"row mt-5 \">\n\n            <div class=\"col-sm-12\">\n                <a class=\"float-right ml-3\" href=\"#\" id=\"clear-log\">Clear log</a>\n                <a class=\"float-right \" target=\"_blank\" href=\"/realtime-data.log\">Show log</a>\n\n\n            </div>\n\n            <div class=\"col-sm-12\">\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" id=\"basic-addon3\">Config lenth</span>\n                    </div>\n                    <input required=\"\" type=\"number\" class=\"form-control\" id=\"configLenth\"\n                        aria-describedby=\"basic-addon3\">\n                </div>\n            </div>\n            <div class=\"col-sm-12 \">\n                <div class=\"drag-file\">\n                    <form class=\"formInput\" action=\"upload.php\" method=\"POST\">\n                        <input type=\"file\" id=\"file\">\n                        <div id=\"textHolder\">Drag your json file here or click in this area.</div>\n                    </form>\n                </div>\n\n            </div>\n\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-12\">\n                <div class=\"table-wrapper-scroll-y my-custom-scrollbar\">\n\n                    <table class=\"table table-bordered table-striped mb-0\">\n                        <thead id=\"header-fixed\" class=\"thead-dark\">\n                            <tr class=\"tableHeader\">\n                                <th scope=\"col\">#</th>\n                                <th scope=\"col\">timeStamp</th>\n                                <th scope=\"col\">Value map</th>\n                            </tr>\n                        </thead>\n                        <tbody id=\"tableTemplate\">\n\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n        </div>\n        <div class=\"row mt-5\">\n            <div class=\"col-md-6 col-sm-12 col-lg-3 pt-3 \">\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" id=\"basic-addon3\">TrainID</span>\n                    </div>\n                    <input required=\"\" type=\"text\" class=\"form-control\" id=\"trainId\" aria-describedby=\"basic-addon3\">\n                </div>\n\n            </div>\n            <div class=\"col-md-6 col-sm-12 col-lg-5 col-12 \" id=\"selectTopic\">\n                <i id=\"\">Topic\n\n                </i>\n                <div class=\"form-check form-check-inline\">\n                    <input class=\"form-check-input\" checked type=\"radio\" name=\"radioName\" id=\"data-fast\"\n                        value=\"/real-time/data-fast\">\n                    <label class=\"form-check-label font-weight-bold\" for=\"data-fast\">/real-time/data-fast</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n\n                    <input class=\"form-check-input\" type=\"radio\" name=\"radioName\" id=\"data-slow\"\n                        value=\"/real-time/data-slow\">\n                    <label class=\"form-check-label font-weight-bold\" for=\"data-slow\">/real-time/data-slow</label>\n                </div>\n            </div>\n\n            <div class=\"col-md-6 col-sm-6 col-lg-2 col-6 pt-3 \">\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend select\">\n                        <label class=\"input-group-text\" for=\"QOS\">QOS</label>\n\n                    </div>\n                    <select disabled class=\"custom-select\" id=\"selectQOS\">\n                        <option selected value=\"0\"> 0</option>\n                        <option value=\"1\"> 1</option>\n                        <option value=\"2\"> 2</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"col-md-6 col-sm-6 col-lg-2 col-6 pt-3 \">\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <label class=\"input-group-text\" for=\"Retain\">Retain</label>\n                    </div>\n                    <select disabled class=\"custom-select\" id=\"selectRetain\">\n                        <option value=\"true\"> true</option>\n                        <option selected value=\"false\"> false</option>\n                    </select>\n                </div>\n            </div>\n\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"or-seperator\">\n                    <i id=\"config-label\">Optional Config\n                        <span class=\"arrow\">&#8659;</span>\n                    </i>\n\n\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row optional-config\" style=\"display: none;\">\n            <div class=\"col-md-5 col-sm-12 col-lg-6 col-12 pt-3\">\n                <div style=\"position: absolute\" id=\"publishTimeError\" class=\"help-block\">\n                </div>\n                <span class=\"focus-input\"></span>\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" id=\"basic-addon3\">Time publish (ms)</span>\n                    </div>\n                    <input min=\"200\" type=\"number\" value=\"200\" type=\"text\" class=\"form-control\" id=\"publishTime\"\n                        aria-describedby=\"basic-addon3\">\n                </div>\n            </div>\n            <div class=\"col-md-4 col-sm-12 col-lg-4 col-12 pt-3\">\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <label class=\"input-group-text\" for=\"Current-time\">Current time</label>\n\n                    </div>\n                    <select class=\"custom-select\" id=\"selectRealTime\">\n                        <option value=\"true\"> On</option>\n                        <option selected value=\"false\"> Off</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"col-md-3 col-sm-12 col-lg-2 col-12 pt-3\">\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <label class=\"input-group-text\" for=\"Loop\">Loop</label>\n\n                    </div>\n                    <select class=\"custom-select\" id=\"selectLoop\">\n                        <option value=\"true\"> On</option>\n                        <option selected value=\"false\"> Off</option>\n                    </select>\n                </div>\n\n            </div>\n        </div>\n        <div class=\"row\">\n            <button id=\"publish\" type=\"button\" class=\"btn btn-success w-100\">Publish Realtime Data</button>\n        </div>\n\n    </div>\n\n    <!-- publish real-time status -->\n    <div class=\"container mt-5\">\n        <div class=\"row or-seperator\" style=\" justify-content: center;\">\n            <i id=\"publish-status-label\">Publish Realtime Status\n                <span class=\"arrow\">&#8659;</span>\n            </i>\n\n        </div>\n\n    </div>\n    <div class=\"container publish-status-form pt-3\" style=\"border-left: 1px solid #ccc;\n    border-right: 1px solid #ccc; \n    margin-top: -25px;\n   /* display: none; */\n   \">\n        <!-- show status when publish realtime status -->\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"alert  text-center\" id=\"realtime-status-notification\" style=\"visibility: hidden;\"\n                    role=\"alert\">\n                    text hold\n                </div>\n            </div>\n        </div>\n        <!-- show status when publish realtime status -->\n        <div class=\"row \">\n            <div class=\"col-md-6 col-sm-12 col-lg-3 pt-2 \">\n                <div style=\"position: absolute; display:none;\" id=\"publishTimeError\" class=\"help-block\">\n                    Requrie</div>\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" id=\"basic-addon3\">TrainID</span>\n                    </div>\n                    <input required=\"\" type=\"text\" class=\"form-control\" id=\"trainId-realtime-status\"\n                        aria-describedby=\"basic-addon3\">\n                </div>\n\n            </div>\n            <div class=\"col-md-6 col-sm-12 col-lg-5 col-12 pt-3  \">\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" id=\"basic-addon3\">topic</span>\n                    </div>\n                    <input required disabled type=\"text\" value=\"/real-time/status\" class=\"form-control\"\n                        id=\"topic-realtime-status\" aria-describedby=\"basic-addon3\">\n                </div>\n\n            </div>\n\n            <div class=\"col-md-6 col-sm-6 col-lg-2 col-6 pt-3 \">\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend select\">\n                        <label class=\"input-group-text\" for=\"QOS\">QOS</label>\n\n                    </div>\n                    <select disabled class=\"custom-select\" id=\"selectQOS-realtime-status\">\n                        <option value=\"0\"> 0</option>\n                        <option selected value=\"1\"> 1</option>\n                        <option value=\"2\"> 2</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"col-md-6 col-sm-6 col-lg-2 col-6 pt-3 \">\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <label class=\"input-group-text\" for=\"Retain\">Retain</label>\n                    </div>\n                    <select disabled class=\"custom-select\" id=\"selectRetain-realtime-status\">\n                        <option value=\"true\"> true</option>\n                        <option selected value=\"false\"> false</option>\n                    </select>\n                </div>\n            </div>\n        </div>\n        <!-- payload real-time status -->\n        <div class=\"row pt-3 pb-3\">\n            <div class=\"col-md-6 col-sm-6 col-lg-3 col-6 pt-3\">\n                <span class=\"focus-input\"></span>\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" id=\"basic-addon3\">ts</span>\n                    </div>\n                    <input value=\"Auto generate from system\" disabled type=\"text\" class=\"form-control\"\n                        aria-describedby=\"basic-addon3\">\n                </div>\n            </div>\n            <div class=\"col-md-6 col-sm-6 col-lg-4 col-6 pt-3\">\n                <div style=\"position: absolute; display:none;\" id=\"publishTimeError\" class=\"help-block\">\n                    Requrie</div>\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <label class=\"input-group-text\" for=\"Current-time\">Train Model Revision</label>\n\n                    </div>\n                    <input type=\"number\" class=\"form-control\" id=\"train-model-revision-input\"\n                        aria-describedby=\"basic-addon3\">\n                </div>\n            </div>\n            <div class=\"col-md-12 col-sm-12 col-lg-5 col-12 pt-3\">\n                <div style=\"position: absolute; display:none;\" id=\"publishTimeError\" class=\"help-block\">\n                    Requrie</div>\n                <div class=\"input-group mb-3 \">\n                    <div class=\"input-group-prepend\">\n                        <label class=\"input-group-text\" for=\"Current-time\">trainModelTimestamp</label>\n\n                    </div>\n                    <input type=\"text\" class=\"form-control \" placeholder=\"YYYY-MM-dd HH:mm:ss.ms\"\n                        id=\"train-model-timestamp-input\" aria-describedby=\"basic-addon3\">\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <button id=\"publish-realtime-status\" type=\"button\" class=\"btn btn-success w-100\">Publish Realtime\n                Status</button>\n        </div>\n    </div>\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n    <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\n        integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\n        crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"\n        integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\"\n        crossorigin=\"anonymous\"></script>\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"\n        integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\"\n        crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.8.0/jszip.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.8.0/xlsx.js\"></script>\n\n    <!-- ajax -->\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n    <script type=\"text/javascript\">\n\n        var configLabel = $(\"#config-label\");\n\n        var classOptionalConfig = $(\".optional-config\");\n\n        // MQTT elemnet\n        var formMQTTConfig = $(\"#mqtt-config-form\");\n        var labelMQTTConfig = $(\"#mqtt-config-lable\");\n\n        // Real time status element\n        var publishStatusLable = $(\"#publish-status-label\");\n        var publishStatusForm = $(\".publish-status-form\");\n        var realtimeStatusNotification = $(\"#realtime-status-notification\");\n\n        var QOSRealTimeStatusSelectId = $(\"#selectQOS-realtime-status\");\n        var retainRealTimeStatusSelectId = $(\"#selectRetain-realtime-status\");\n\n        var trainModelRevisionInputId = $(\"#train-model-revision-input\");\n        var trainModelTimestampInputId = $(\"#train-model-timestamp-input\");\n        var trainIdRealtimeStausInputId = $(\"#trainId-realtime-status\");\n        var topicReRealtimeStausInputId = $(\"#topic-realtime-status\");\n\n        var publishRealtimeStatusButton = $(\"#publish-realtime-status\");\n\n        // constant value\n        var TIME_OUT_ERR_AS_MS = 3000;\n        var TIME_OUT_SUCCSESS_AS_MS = 3000;\n        var CLASS_ERROR_BORDER = \"error-border\";\n        var CLASS_ALERT_DANGER = \"alert-danger\";\n        var CLASS_ALERT_SUCCESS = \"alert-success\";\n\n        var MIN_VALUE_DATA_FAST = 200;\n        var MAX_VALUE_DATA_FAST = 1000;\n\n        var MIN_VALUE_DATA_SLOW = 1001;\n        var MAX_VALUE_DATA_SLOW = 360000;\n\n\n        var listPayload = [];\n        var key = \"payLoad\";\n        var configLength = localStorage.getItem(\"configLength\") || -1;\n\n        var selectedTopic = \"/real-time/data-fast\";// default topic\n        var currentSelectTopic = \"data-fast\";\n\n        var errorPublishTime = \"\";\n\n        var classOptionalConfigOpen = $(\".optional-config .open\");\n\n\n        var QOSValue = $(\"#selectQOS\");\n        var retainValue = $(\"#selectRetain\");\n        var loopValue = $(\"#selectLoop\");\n        var trainId = $(\"#trainId\");\n        var configLengthId = $(\"#configLenth\");\n        var isRealTime = $(\"#selectRealTime\");\n        var publishTime = $(\"#publishTime\");\n        var mqttUser = $(\"#mqttUser\");\n        var mqttPassWord = $(\"mqttPassWord\");\n\n        var fileInput = $('#file')\n        var fileName = $('#fileName')\n        var formInput = $(\".formInput\");\n\n\n        var textHolder = $('#textHolder');\n        var publishMessage = $(\"#publish\");\n        var classTableHeader = $(\".tableHeader\");\n\n\n        //=========================== ULTIL AREA ======================================>\n\n        function bytesToSize(bytes) {\n            var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n            if (bytes == 0) return '0 Byte';\n            var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n            return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n        }\n\n        var decodeBase64 = (base64Code) => {\n            let buff = new Buffer(base64Code, 'base64');\n            let text = buff.toString('ascii');\n            return text;\n        }\n        /**\n                * decode base64 to gzip format\n                * @param {*} base64 \n                * @returns buffer array of gzip format\n                */\n        function _base64ToArrayBuffer(base64) {\n            var binary_string = window.atob(base64);\n            var len = binary_string.length;\n            var bytes = new Int8Array(len);\n            for (var i = 0; i < len; i++) {\n                bytes[i] = binary_string.charCodeAt(i);\n            }\n\n            return bytes;\n\n        }\n\n        function uncompress(base64data) {\n            var compressData = window.atob(base64data);\n            var compressData = compressData.split('').map(function (e) {\n                return e.charCodeAt(0);\n            });\n            binData = new Uint8Array(compressData);\n            let data = pako.inflate(binData);\n            // covert unit8 to int 8\n            var int8Array = new Int8Array(data.buffer.slice(data.byteOffset), 0, data.length);\n            return int8Array;\n        }\n\n\n        /**\n         * Conver dec to binary\n         * @param {*} dec  decimal number\n         * @returns \n         */\n        function dec2bin(dec) {\n            return (dec >>> 0).toString(2);\n        }\n\n        /**\n         * get value map as binary\n         * @param {*} arrayBuffer \n         * @param {*} lengthConfig length of record config file\n         * @returns binary value map\n         */\n        function getValueMap(arrayBuffer, lengthConfig) {\n            const regexValidateNumber = /\\D/.test(lengthConfig);\n            if (regexValidateNumber == true) { // lengthConfig is not number\n                throw new Error(lengthConfig + \" is not number\")\n            }\n            // convert length config to byte format\n            const lengthOfValueMap = (lengthConfig % 8 == 0)\n                ? parseInt(lengthConfig / 8)\n                : parseInt(lengthConfig / 8) + 1;\n\n            var valueMap = [];\n\n            //shift 6 byte first\n            for (let i = 7; i < lengthOfValueMap + 7; i++) {\n                let value = \"00000000\" + (arrayBuffer[i] >>> 0).toString(2).substr(-8);\n                value = value.slice(-8); // get just 8 bit signed\n                value = value // Big Endian\n                valueMap.push(value);\n\n            }\n            return valueMap;\n        }\n\n        var showInvalidInput = (field, errorContent) => {\n            $(field).text(errorContent);\n        }\n        var hideInvalidInput = (field) => {\n            $(field).text(\"\");\n        }\n\n        //=========================== END ULTIL AREA ======================================>\n\n\n        //=========================== HANDLE AREA ======================================>\n\n        var handleSelectTopic = function () {\n            hideInvalidInput(\"#publishTimeError\");// clear error\n            errorPublishTime = \"\";\n            var selectField = $('input[name=radioName]:checked', '#selectTopic');\n            currentSelectTopic = selectField.attr(\"id\")\n\n            selectedTopic = selectField.val();\n            if (currentSelectTopic == \"data-slow\") {\n                publishTime.attr({\n                    max: MAX_VALUE_DATA_SLOW,\n                    min: MIN_VALUE_DATA_SLOW\n                });\n                publishTime.val(MIN_VALUE_DATA_SLOW)\n            } else {\n                publishTime.attr({\n                    max: MAX_VALUE_DATA_FAST,\n                    min: MIN_VALUE_DATA_FAST\n                });\n                publishTime.val(MIN_VALUE_DATA_FAST)\n            }\n        }\n\n        var handlePublishTime = (e) => {\n            let value = parseInt(e.target.value) || 0;\n\n            if (currentSelectTopic == \"data-fast\") {\n                if (value < MIN_VALUE_DATA_FAST || value > MAX_VALUE_DATA_FAST) {\n                    errorPublishTime = `Time data fast must be ${MIN_VALUE_DATA_FAST} ms or ${MAX_VALUE_DATA_FAST} ms`;\n                    showInvalidInput(\"#publishTimeError\", errorPublishTime);\n\n                } else {\n                    errorPublishTime = \"\";\n                    hideInvalidInput(\"#publishTimeError\");\n                }\n            }\n\n            if (currentSelectTopic == \"data-slow\") {\n                errorPublishTime = `Time data slow must be between  ${MIN_VALUE_DATA_SLOW} ms and  ${MAX_VALUE_DATA_SLOW} ms`;\n                if (value < MIN_VALUE_DATA_SLOW || value > MAX_VALUE_DATA_SLOW) {\n                    showInvalidInput(\"#publishTimeError\", errorPublishTime);\n                } else {\n                    errorPublishTime = \"\";\n                    hideInvalidInput(\"#publishTimeError\");\n                }\n            }\n        }\n\n        function handleConfigLengthChange() {\n\n            var value = $(this).val();\n\n            configLength = value;\n\n        }\n\n        var handleReadFileDataJson = function (event) {\n            if (configLength <= 0) // if config length is not set\n            {\n                // to do with config length is not set\n                configLengthId.addClass(CLASS_ERROR_BORDER);\n                setTimeout(() => {\n                    configLengthId.removeClass(CLASS_ERROR_BORDER);\n                }, TIME_OUT_ERR_AS_MS);\n\n            } else {\n                localStorage.setItem(\"configLength\", configLength);\n                var file = fileInput[0].files[0];\n\n                if (file) {\n                    textHolder.text(file.name + \",\" + bytesToSize(file.size));\n                    fileName.text(file ? file.name : '')\n                    var reader = new FileReader();\n\n                    if (file.type == \"application/json\") { // json only\n                        formInput.removeClass(CLASS_ERROR_BORDER);\n\n                        reader.readAsBinaryString(file);\n                        reader.onload = function () {\n                            listPayload = JSON.parse(reader.result)\n                            // scope.listPayload = listPayload;\n                            textHolder.append(\",\" + listPayload.length + (listPayload.length > 1 ? \" Records\" : \" Record\"));\n                            let tableHeader = `<th scope=\"col\">#</th>`;\n                            let keysInJsonFile = Object.keys(listPayload[0]);\n                            key = keysInJsonFile[1];\n                            // put key to header table\n                            // keysInJsonFile.forEach(c => {\n                            //     tableHeader += `<th scope=\"col\">${c}</th>`\n                            // })\n\n                            // classTableHeader.html(tableHeader);\n\n                            //put data to table\n                            let tableTemplate = \"\";\n                            listPayload.forEach((c, i) => {\n                                tableTemplate += `\n                                                <tr >\n                                                    <td scope=\"row\">${i + 1}</td>\n                                                    <th >${c[keysInJsonFile[0]]}</th>\n                                                    <td>${(getValueMap(uncompress(c[keysInJsonFile[1]]), configLength))}</td>\n                                                </tr> `;\n                            })\n\n                            $(\"#tableTemplate\").html(tableTemplate);\n                        };\n                        reader.onerror = function () {\n                            console.log('Error while reading files');\n                        };\n                    } else {\n                        // todo with file is not json file\n                        listPayload = [];\n                        $(\"#tableTemplate\").html(\"\");\n                        formInput.addClass(CLASS_ERROR_BORDER);\n                        textHolder.append(\"<span class ='error-color'> (Json File Only)</span>\")\n                    }\n\n                } else {\n                    // todo with file is not exist\n\n\n                }\n            }\n\n\n        };\n\n\n        //<=========================== END HANDLE AREA ======================================>\n\n        (function (scope) {\n        var handlePublishMessage = function (e) {\n            if (listPayload.length === 0 || trainId.val().length === 0 || errorPublishTime.length !== 0) {\n                if (listPayload.length === 0) { // \n                    formInput.addClass(CLASS_ERROR_BORDER);\n                    setTimeout(() => {\n                        formInput.removeClass(CLASS_ERROR_BORDER);\n                    }, TIME_OUT_ERR_AS_MS);\n                }\n                if (trainId.val().length === 0) {\n                    trainId.addClass(CLASS_ERROR_BORDER);\n                    setTimeout(() => {\n                        trainId.removeClass(CLASS_ERROR_BORDER);\n                    }, TIME_OUT_ERR_AS_MS);\n                }\n                if (errorPublishTime.length !== 0) {\n                    showInvalidInput(\"#publishTimeError\", errorPublishTime);\n                    publishTime.addClass(CLASS_ERROR_BORDER);\n                    $(\".or-seperator\").addClass(CLASS_ERROR_BORDER);\n                    setTimeout(() => {\n                        publishTime.removeClass(CLASS_ERROR_BORDER);\n                        $(\".or-seperator\").removeClass(CLASS_ERROR_BORDER);\n                        hideInvalidInput(\"#publishTimeError\");\n\n                    }, 5000);\n                }\n\n            } else {\n                formInput.removeClass(CLASS_ERROR_BORDER);\n                trainId.removeClass(CLASS_ERROR_BORDER);\n                publishTime.removeClass(CLASS_ERROR_BORDER);\n                hideInvalidInput(\"#publishTimeError\");\n                let mqtt = {\n                    username: mqttUser.val() || \"admin\",\n                    password: mqttPassWord.val() || \"admin\"\n                }\n\n                scope.send({\n                    payload: listPayload,\n                    topic: trainId.val() + selectedTopic,\n                    qos: QOSValue.val(), retain: retainValue.val() === 'true',\n                    loop: loopValue.val() === 'true',\n                    key: key,\n                    isRealTime: isRealTime.val() === 'true',\n                    timePublish: parseInt(publishTime.val()),\n                    // mqtt:mqtt\n                });\n\n            }\n\n        }\n\n        // scope.clear = function () {\n        // \tfileInput.val('').trigger('change')\n        // }\n\n        configLengthId.on(\"input\", handleConfigLengthChange)\n\n        fileInput.on('change', handleReadFileDataJson);\n        // check user change topic \n        $('#selectTopic input').on('change', handleSelectTopic);\n\n        // check user input publish time \n        publishTime.on(\"change keyup paste\", handlePublishTime);\n\n        publishMessage.on(\"click\", handlePublishMessage)\n\n\n        })(scope);\n\n    </script>\n\n    <script>\n        var idShowErrorList = $(\"#showErrorList\");\n        var fileInputCSV = document.getElementById(\"csv\");\n        var fileInputExcel = document.getElementById(\"excel\");\n        var labelTestConfig = $(\"#Test-config-lable\");\n\n        var idSignalCodeColumnIndex = $(\"#signalCodeColumnIndex\");\n        var idBitLengthColumnIndex = $(\"#bitLengthColumnIndex\");\n        var idValueTypeColumnIndex = $(\"#valueTypeColumnIndex\");\n        var idScalingFactorColumnIndex = $(\"#scalingFactorColumnIndex\");\n\n        var idRtdSignalCodeColumnIndex = $(\"#rtdSignalCodeColumnIndex\");\n        var idRtdStartDataRowIndex = $(\"#rtdStartDataRowIndex\");\n        var idRtdStartTimeColumnIndex = $(\"#rtdStartTimeColumnIndex\");\n\n\n        var testFormId = $(\"#test-form\");\n\n        // check realtime datas\n        var configData = [], realTimeData = [];\n\n        // #from config.csv\n        var signalCodeColumnIndex = parseInt(localStorage.getItem(\"signalCodeColumnIndex\")) || 0;\n        var bitLengthColumnIndex = parseInt(localStorage.getItem(\"bitLengthColumnIndex\")) || 1;\n        var valueTypeColumnIndex = parseInt(localStorage.getItem(\"valueTypeColumnIndex\")) || 2;\n        var scalingFactorColumnIndex = parseInt(localStorage.getItem(\"scalingFactorColumnIndex\")) || 3;\n\n        // #from RealtimeData.xsl\n        var rtdSignalCodeColumnIndex = parseInt(localStorage.getItem(\"rtdSignalCodeColumnIndex\")) || 0;\n        var rtdStartTimeColumnIndex = parseInt(localStorage.getItem(\"rtdStartTimeColumnIndex\")) || 1;\n        var rtdStartDataRowIndex = parseInt(localStorage.getItem(\"rtdStartDataRowIndex\")) || 5;\n\n        // to hold old value when user input value incorrect\n        var configRTD = {\n            signalCodeColumnIndex,\n            bitLengthColumnIndex,\n            valueTypeColumnIndex,\n            scalingFactorColumnIndex,\n\n            rtdSignalCodeColumnIndex,\n            rtdStartTimeColumnIndex,\n            rtdStartDataRowIndex,\n\n        }\n\n        // log\n        var clearLogId = $(\"#clear-log\");\n\n        function setConfigData(configData) {\n            this.configData = configData;\n        }\n        function getConfigData() {\n            return this.configData;\n        }\n\n        function setRealTimeData(realTimeData) {\n            this.realTimeData = realTimeData\n        }\n\n        function getRealTimeData() {\n            return this.realTimeData;\n        }\n        // util method\n        function columnToLetter(column) {\n            var temp, letter = '';\n            while (column > 0) {\n                temp = (column - 1) % 26;\n                letter = String.fromCharCode(temp + 65) + letter;\n                column = (column - temp - 1) / 26;\n            }\n            return letter;\n        }\n\n\n        function isBoolean(value) {\n            if (value == \"1\" || value == \"0\") {\n                return true;\n            }\n            return false;\n        }\n\n        function isNormalInteger(str) {\n            str = str.trim();\n            if (!str) {\n                return false;\n            }\n            str = str.replace(/^0+/, \"\") || \"0\";\n            var n = Math.floor(Number(str));\n            return n !== Infinity && String(n) === str && n >= 0;\n        }\n\n        function isFloat(input) {\n            if (!isNaN(parseFloat(input))) {\n                return true;\n            }\n            return false;\n        }\n        function isString(input) {\n            if (isBoolean(input)) {\n                return false;\n            } else if (isNormalInteger(input)) {\n                return false;\n            } else if (isFloat(parseFloat(input))) {\n                return false;\n            } else {\n                return true;\n            }\n        }\n        function processDataCsv(allText) {\n\n            var allTextLines = allText.split(/\\r\\n|\\n/);\n\n            var header = allTextLines[0].split(','); // get header\n\n            allTextLines.shift(); // delete header\n\n            var lines = [];\n            while (typeof allTextLines[0] !== \"undefined\") {\n                var line = allTextLines.shift();\n                var split = line.split(',');\n                lines.push({\n                    signalCode: split[configRTD.signalCodeColumnIndex],\n                    length: split[configRTD.bitLengthColumnIndex],\n                    type: split[configRTD.valueTypeColumnIndex],\n                    scalingFactor: split[configRTD.calingFactorColumnIndex]\n                })\n            }\n            lines.pop();  // delete undefine value end of line in csv\n\n            return lines\n        }\n\n        function processDataExcelToCsv(allText) {\n\n            var allTextLines = allText.split(/\\r\\n|\\n/);\n\n            var header = allTextLines[0].split(','); // get header\n            header = header.slice(configRTD.rtdStartTimeColumnIndex, header.length);\n\n\n            // allTextLines.shift(); // delete header\n            allTextLines = allTextLines.slice(configRTD.rtdStartDataRowIndex, allTextLines.length);\n            var lines = [];\n            console.log(configRTD);\n            while (typeof allTextLines[0] !== \"undefined\") {\n                var line = allTextLines.shift();\n                var split = line.split(',');\n\n                var rowData = {\n                    signalCode: split[configRTD.rtdSignalCodeColumnIndex]\n                }\n                header.forEach((v, i) => {\n                    rowData[v] = split[i + configRTD.rtdStartTimeColumnIndex]\n                        ? split[i + configRTD.rtdStartTimeColumnIndex]\n                        : undefined;\n                })\n                lines.push(rowData)\n            }\n            lines.pop();  // delete undefine value end of line in csv\n            // console.log(lines);\n            console.log(lines);\n            return lines\n        }\n\n        function checkRealtimData(configDataCsv, realTimeData) {\n            var data = realTimeData;\n            var config = configDataCsv;\n            console.log(configDataCsv);\n\n            // data = data.slice(rtdStartDataRowIndex - 3, data.length);\n\n            var keys = Object.keys(data[0]);\n            var indexOfSingalCode = keys.indexOf(\"signalCode\");\n\n            if (indexOfSingalCode > -1) { // delete key signal code\n                keys.splice(indexOfSingalCode, 1);\n            }\n            var errorList = [];\n            for (let i = 0; i < data.length; i++) {\n\n                let inforCurrentSignal = config.find((v) => v.signalCode == data[i].signalCode);\n\n                keys.forEach((v, col) => {\n                    switch (inforCurrentSignal.type) {\n                        case \"int\":\n\n                            if (data[i][v] != undefined) {\n                                var check = isNormalInteger(data[i][v]);\n\n                                if (check == false) {\n                                    errorList.push({\n                                        signalCode: inforCurrentSignal.signalCode,\n                                        payloadNo: v,\n                                        expectType: inforCurrentSignal.type,\n                                        value: data[i][v],\n                                        row: i + configRTD.rtdStartDataRowIndex + 1,\n                                        column: columnToLetter(col + 2),\n\n                                    })\n                                }\n                            }\n                            break;\n                        case \"boolean\":\n                            if (data[i][v] != undefined) {\n                                var check = isBoolean((data[i][v]));\n                                if (check == false) {\n                                    errorList.push({\n                                        signalCode: inforCurrentSignal.signalCode,\n                                        payloadNo: v,\n                                        expectType: inforCurrentSignal.type,\n                                        value: data[i][v],\n                                        row: i + configRTD.rtdStartDataRowIndex + 1,\n                                        column: columnToLetter(col + 2),\n\n                                    })\n                                }\n                            }\n                            break;\n                        case \"double\":\n\n                            if (data[i][v] != undefined) {\n                                var check = isFloat(parseFloat(data[i][v]));\n                                if (check == false) {\n                                    errorList.push({\n                                        signalCode: inforCurrentSignal.signalCode,\n                                        payloadNo: v,\n                                        expectType: inforCurrentSignal.type,\n                                        value: data[i][v],\n                                        row: i + configRTD.rtdStartDataRowIndex + 1,\n                                        column: columnToLetter(col + 2),\n\n                                    })\n                                }\n                            }\n                            break;\n                        case \"string\":\n                            if (data[i][v] != undefined) {\n                                var string = data[i][v];\n                                var checkType = isString(string);\n                                var checkLength = string.length * 8 == parseInt(inforCurrentSignal.length);\n\n                                if (checkLength == false || checkType == false) {\n                                    errorList.push({\n                                        signalCode: inforCurrentSignal.signalCode,\n                                        payloadNo: v,\n                                        expectType: `${inforCurrentSignal.type} ( ${inforCurrentSignal.length / 8})`,\n                                        value: `${data[i][v]} (${data[i][v].length})`,\n                                        row: i + configRTD.rtdStartDataRowIndex + 1,\n                                        column: columnToLetter(col + 2),\n\n                                    })\n                                }\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n\n                })\n            }\n            return errorList;\n        }\n\n        // end Util method\n\n        // handle method \n\n        var handleLabelConfigMQTT = (e) => {\n            // check if is open\n            if (formMQTTConfig.css(\"display\") == \"none\") {\n                formMQTTConfig.css(\"display\", \"\");\n            } else {\n\n                formMQTTConfig.css(\"display\", \"none\");\n            }\n            // classOptionalConfig.slideToggle(\"slow\");\n\n        }\n        var handleLableOptionalConfig = (e) => {\n            // check if is open\n            if (classOptionalConfig.css(\"display\") == \"none\") {\n                classOptionalConfig.css(\"display\", \"\");\n            } else {\n\n                classOptionalConfig.css(\"display\", \"none\");\n            }\n            // classOptionalConfig.slideToggle(\"slow\");\n\n        }\n        var handleInputFileCSV = function () {\n            let file = fileInputCSV.files[0];\n\n            // start reading the file. When it is done, calls the onload event defined above.\n\n            if (file) {\n                console.log(file);\n                var reader = new FileReader();\n                reader.readAsBinaryString(file);\n                reader.onload = function () {\n                    setConfigData(processDataCsv(reader.result));\n                    // document.getElementById('out').innerHTML = reader.result;\n                };\n            } else {\n                //to do with file does not exist\n            }\n\n\n        }\n        var handleInputFileExel = (oEvent) => {\n            // Get The File From The Input\n            var oFile = oEvent.target.files[0];\n            var sFilename = oFile.name;\n            // Create A File Reader HTML5\n            if (oFile) {\n                var reader = new FileReader();\n                // Tell JS To Start Reading The File.. You could delay this if desired\n                reader.readAsBinaryString(oFile);\n\n                // Ready The Event For When A File Gets Selected\n                reader.onload = function (e) {\n                    var data = e.target.result;\n                    var cfb = XLS.CFB.read(data, { type: 'binary' });\n                    var wb = XLS.parse_xlscfb(cfb);\n                    // Loop Over Each Sheet\n                    wb.SheetNames.forEach(function (sheetName) {\n                        // Obtain The Current Row As CSV\n                        var sCSV = XLS.utils.make_csv(wb.Sheets[sheetName]);\n                        var oJS = XLS.utils.sheet_to_row_object_array(wb.Sheets[sheetName]);\n                        var sheetToJson = XLS.utils.sheet_to_row_object_array(wb.Sheets[sheetName])\n                        // realTimeData = oJS;\n\n                        setRealTimeData(processDataExcelToCsv(sCSV));\n                    });\n                };\n\n\n            } else {\n                //to do with file does not exsist\n            }\n\n        }\n        var handeCompareValue = (e) => {\n            idShowErrorList.html(\"\");\n            if (this.getConfigData().length === 0 || this.getRealTimeData().length === 0) {\n\n                // to do with file does not exist\n                if (this.getConfigData().length === 0) {\n\n                }\n                if (this.getRealTimeData().length === 0) {\n\n                }\n\n            } else {\n                var checkResult = checkRealtimData(this.getConfigData(), this.getRealTimeData());\n                if (checkResult.length !== 0) {\n                    var table = `\n                    <table class=\"table\">\n                    <thead class=\"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Signal Code</th>\n                            <th scope=\"col\">Payload No</th>\n                            <th scope=\"col\">Expect Type</th>\n                            <th scope=\"col\">Your Value</th>\n                            <th scope=\"col\">Position</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    `;\n                    let tableBody = \"\";\n                    checkResult.forEach((v, i) => {\n                        tableBody += `\n                    <tr >\n                        <td scope=\"row\">${i + 1}</td>\n                        <th >${v.signalCode}</th>\n                        <td>${v.payloadNo}</td>\n                        <td>${v.expectType}</td>\n                        <td>${v.value}</td>\n                        <td>${v.row} ${v.column}</td>\n                    </tr>\n                    `\n\n                    });\n                    table += tableBody + `   </tbody>\n                    </table>`;\n                    idShowErrorList.addClass(\"table-wrapper-scroll-y my-custom-scrollbar\")\n                    idShowErrorList.html(table);\n                }\n                else {\n                    let success = `<div class=\"alert alert-success text-center\" role=\"alert\"> Nothing wrong!</div>`\n                    idShowErrorList.removeClass(\"table-wrapper-scroll-y my-custom-scrollbar\")\n                    idShowErrorList.html(success);\n                }\n\n            }\n\n        }\n\n        function handleLableTestConfig(e) {\n            // check if is open\n            if (testFormId.css(\"display\") == \"none\") {\n                testFormId.css(\"display\", \"\");\n            } else {\n\n                testFormId.css(\"display\", \"none\");\n            }\n            // classOptionalConfig.slideToggle(\"slow\");\n        }\n        function handleLablePublishStatus() {\n            console.log(\"oke\");\n            // check if is open\n            if (publishStatusForm.css(\"display\") == \"none\") {\n                publishStatusForm.css(\"display\", \"\");\n            } else {\n\n                publishStatusForm.css(\"display\", \"none\");\n            }\n            // classOptionalConfig.slideToggle(\"slow\");\n        }\n\n        var handlePublishRealtimeStatus = () => {\n            // check user fill input\n            // if (trainIdRealtimeStausInputId.val().length == 0\n            //     || trainModelRevisionInputId.val().length == 0\n            //     || trainModelTimestampInputId.val().length == 0\n            //     || trainIdRealtimeStausInputId.val().length == 0) {\n\n\n            // } else {\n\n            // }\n\n            var errorFlag = false; // true if user input leave any field\n            $(\".publish-status-form :input[type=text], :input[type=number]\").each(function () {\n                var value = $(this).val();\n                var id = $(this).attr(\"id\");\n                if (!value) {\n                    // display error\n                    $(\"#\" + id).addClass(\"error-border\");\n                    $(\"#\" + id).parent().siblings(\"div#publishTimeError\").css(\"display\", \"\");\n                    errorFlag = true;\n\n                }\n                // if value exsist\n                if (value) {\n                    // hide erorr\n                    $(\"#\" + id).removeClass(\"error-border\");\n                    $(\"#\" + id).parent().siblings(\"div#publishTimeError\").css(\"display\", \"none\");\n                }\n            })\n            if (errorFlag == false) {\n                // to do publish message\n\n                var messageRealtimeStatus = {\n                    qos: QOSRealTimeStatusSelectId.val(),\n                    retain: retainRealTimeStatusSelectId.val() === 'true',\n                    topic: trainIdRealtimeStausInputId.val() + topicReRealtimeStausInputId.val(),\n                    payload: {\n                        trainModelRevision: trainModelRevisionInputId.val(),\n                        trainModelTimestamp: trainModelTimestampInputId.val()\n                    }\n                }\n\n                $.ajax({\n                    url: \"/realtime-status\",\n                    type: \"POST\",\n                    data: messageRealtimeStatus,\n                    cache: false,\n                    success: function (res) {\n                        if (res.status == false) {\n                            realtimeStatusNotification.addClass(CLASS_ALERT_DANGER);\n                            realtimeStatusNotification.css(\"visibility\", \"visible\");\n                            console.log(res.error);\n                            realtimeStatusNotification.text(res.error.message);\n                        } else {\n                            realtimeStatusNotification.addClass(CLASS_ALERT_SUCCESS);\n                            realtimeStatusNotification.css(\"visibility\", \"visible\");\n                            realtimeStatusNotification.text(\"Publish realtime status success\");\n                            setTimeout(() => {\n                                realtimeStatusNotification.css(\"visibility\", \"hidden\");\n                            }, TIME_OUT_SUCCSESS_AS_MS);\n                        }\n\n                    }\n                });\n            }\n\n\n        }\n        function handleClearLog() {\n\n            function downloadObjectAsJson(log, exportName) {\n                var dataStr = \"data:text/json;charset=utf-8,\" + log;\n                var downloadAnchorNode = document.createElement('a');\n                downloadAnchorNode.setAttribute(\"href\", dataStr);\n                downloadAnchorNode.setAttribute(\"download\", exportName);\n                document.body.appendChild(downloadAnchorNode); // required for firefox\n                downloadAnchorNode.click();\n                downloadAnchorNode.remove();\n            }\n\n            $.ajax({\n                url: \"/realtime-data-clear-log\",\n                type: \"GET\",\n                success: function (res) {\n                    if (res.status == false) {\n                        // to do with error\n                        console.log(res.error);\n                    } else {\n                        var logString = \"\";\n                        res.data.forEach((v, i) => {\n                            logString += `${v.timestamp} ${v.type} message topic: ${v.topic} payload : ${v.payload.data ? Array.from(v.payload.data) : JSON.stringify(v.payload)} qos: ${v.qos} retain : ${v.retain} \\n`;\n                        })\n                        console.log(logString);\n                        downloadObjectAsJson(logString, \"realtime-log.txt\")\n                    }\n\n                }\n            });\n\n\n        }\n        // end handle method\n        $(document).ready(function () {\n            //set value for config length\n            configLengthId.val(configLength);\n\n            //set value for config csv\n            idBitLengthColumnIndex.val(bitLengthColumnIndex);\n            idSignalCodeColumnIndex.val(signalCodeColumnIndex);\n            idValueTypeColumnIndex.val(valueTypeColumnIndex);\n            idScalingFactorColumnIndex.val(scalingFactorColumnIndex);\n\n            //set value for data excel\n            idRtdSignalCodeColumnIndex.val(rtdSignalCodeColumnIndex);\n            idRtdStartDataRowIndex.val(rtdStartDataRowIndex);\n            idRtdStartTimeColumnIndex.val(rtdStartTimeColumnIndex);\n\n\n            configLabel.on(\"click\", handleLableOptionalConfig);\n\n            labelMQTTConfig.on(\"click\", handleLabelConfigMQTT);\n\n            labelTestConfig.on(\"click\", handleLableTestConfig);\n\n            publishStatusLable.on(\"click\", handleLablePublishStatus)\n\n            clearLogId.on(\"click\", handleClearLog);\n\n            // fileInputCSV.addEventListener('change', handleInputFileCSV);\n\n            // fileInputExcel.addEventListener('change', handleInputFileExel);\n\n            publishRealtimeStatusButton.on(\"click\", handlePublishRealtimeStatus);\n\n            $(\"#compare\").click(handeCompareValue);\n\n            $('.wrap input').on('change keyup paste', function () {\n                var id = $(this).attr('id');\n                var value = parseInt(this.value);\n                configRTD[id] = value\n                localStorage.setItem(id, value || configRTD[id])\n            });\n\n            $('.wrap input').on('focusin', function () {\n                $(this).parent().find('label').addClass('active');\n            });\n\n            $('.wrap input').on('focusout', function () {\n                if (!this.value) {\n                    $(this).parent().find('label').removeClass('active');\n                }\n            });\n\n        });\n    </script>\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 400,
        "y": 240,
        "wires": [
            [
                "54bd17cd.79f858",
                "8ee158e3.9548a8"
            ]
        ]
    },
    {
        "id": "a1a568a9.606f68",
        "type": "mqtt out",
        "z": "50470e7e.8037e",
        "name": "",
        "topic": "",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6e2ca8ae.a41228",
        "x": 1030,
        "y": 200,
        "wires": []
    },
    {
        "id": "54bd17cd.79f858",
        "type": "function",
        "z": "50470e7e.8037e",
        "name": "publish message",
        "func": "var zlib = context.global.zlib;\n/**\n * sleep process \n * @param {*} ms \n * @returns \n */\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n/**\n * get current date time\n * @returns date time format dd/mm/yyyy \n */\nfunction getCurrentDate() {\n    var myDate = new Date(Date.now());\n    return (myDate.getFullYear() + '-' + ('0' + (myDate.getMonth() + 1)).slice(-2) + '-' + ('0' + myDate.getDate()).slice(-2) + ' ' + myDate.getHours() + ':' + ('0' + (myDate.getMinutes())).slice(-2) + ':' + myDate.getSeconds() + \".\" + myDate.getMilliseconds());\n}\n\nlet decodeBase64 = (base64Code) => Buffer.from(base64Code, 'base64');\nlet encodeBase64 = (binBuffer) => Buffer.from(binBuffer).toString('base64');\n\nlet decompressGzip = (gzipData) => {\n    return new Int8Array(zlib.gunzipSync(gzipData, function (err, result) {\n        if (err) return reject(new Error(err))\n        return result;\n    }))\n}\n\nlet compressGzip = (binData) => {\n    return Buffer.from(zlib.gzipSync(binData))\n}\n\n/**\n * Convert long to byte array\n * @param {*} long \n * @returns \n */\nvar longToByteArray = function (/*long*/long) {\n    // we want to represent the input as a 6-bytes array\n    var byteArray = [0, 0, 0, 0, 0, 0];\n\n    for (var index = 0; index < byteArray.length; index++) {\n        var byte = long & 0xff;\n        byteArray[index] = byte;\n        long = (long - byte) / 256;\n    }\n\n    return new Int8Array(byteArray.reverse());\n};\n\n/**\n * Convert payload as original\n * @param {*} payload \n * @returns \n */\nlet convertPayLoadToBinary = (payload) => {\n    let gzipData = (decodeBase64(payload));\n\n    let binData = decompressGzip(gzipData);\n\n    return binData;\n}\n\n/**\n * Get current timestamp as byte buffer\n * @returns byte buffer of current time stamp\n */\nconst getCurrentTimestamp = () => {\n    return new Int8Array(longToByteArray(Date.now()));\n}\n\n\n/**\n * Create new base64 payload with current timestamp\n * @param {*} payload \n * @returns new gzip payload\n */\nconst newPayload = (payload) => {\n    let binaryData = convertPayLoadToBinary(payload);\n    let currentTimeStamp = getCurrentTimestamp();\n\n    // replace old time stamp\n    for (let i = 0; i < 6; i++) {\n        binaryData[i] = currentTimeStamp[i];\n    }\n\n    // compress binary data has been replaced timestamp to gizp format\n    let compressBintoGzip = compressGzip(binaryData);\n\n    return compressBintoGzip;\n}\nconst REAL_TIME_PAYLOAD_KEY = \"real_time_payload_key\";\n/**\n * Write payload to log array\n * @param {*} timestamp \n * @param {*} topic \n * @param {*} qos \n * @param {*} retain \n * @param {*} payload \n */\nfunction writeToLog(timestamp, topic, qos, retain, payload, type) {\n    var payloadArray = global.get(REAL_TIME_PAYLOAD_KEY) || [];\n\n    payloadArray.push({\n        timestamp,\n        topic,\n        qos,\n        retain,\n        payload,\n        type\n    });\n\n    global.set(REAL_TIME_PAYLOAD_KEY, payloadArray);\n\n}\n\nconst TIME_DELAY = (msg.timePublish < 200) ? 200 : msg.timePublish; // publish message 200 ms per time\nlet rtdData = msg.payload;\n\nlet payloadDelivered = 1;\n\nclearInterval(global.get(\"loop\")); // clear internal before\n\n/**\n * publish message to broker\n */\nconst publishMessage = async () => {\n\n    let key = msg.key;\n    let payload = decodeBase64(rtdData[0][key]);\n\n    if (msg.isRealTime == true) {\n        payload = newPayload(payload)\n    }\n\n    msg.payload = payload; // publish first message directly\n    node.send(msg);\n    writeToLog(getCurrentDate(), msg.topic, msg.qos, msg.retain, payload, \"publish\");\n    \n    if (rtdData.length > 1) {\n        var loop = setInterval(async () => {\n\n            try {\n                let payload = decodeBase64(rtdData[payloadDelivered][key]);\n\n                if (msg.isRealTime == true) {\n                    payload = newPayload(payload)\n                }\n                //publish only payload in json file\n                msg.payload = payload;\n                node.send(msg);\n                writeToLog(getCurrentDate(), msg.topic, msg.qos, msg.retain, payload, \"publish\");\n                payloadDelivered++;\n\n                // check all message is send\n                if (payloadDelivered >= rtdData.length) {\n                    if (msg.loop == true) { // if user turn on loop infinity\n                        clearInterval(loop);\n                        payloadDelivered = 1;\n                        await sleep(TIME_DELAY); // prepare for go back first message\n                        publishMessage(); // go back to first message\n                    } else {\n                        clearInterval(loop);\n                    }\n                }\n            } catch (e) {\n                node.warn(e);\n                clearInterval(loop);\n            }\n\n        }, TIME_DELAY);\n\n        global.set(\"loop\", loop); // save id internal to clear affter\n    } else {\n         node.warn(msg.loop);\n        if (msg.loop == true) { // if user turn on loop infinity\n            \n            await sleep(TIME_DELAY); // prepare for go back first message\n            publishMessage(); // go back to first message\n        }\n\n    }\n\n}\npublishMessage();\n\n\n\n\n// async function publishMessage(){\n\n//     while(payloadDelivered < rtdData.length){\n//         msg.payload= rtdData[payloadDelivered];\n//         node.send(msg);\n//         payloadDelivered++;\n//         if(payloadDelivered >= rtdData.length && msg.loop ==true){\n//             payloadDelivered =0;\n//         }\n//       await sleep(TIME_DELAY);\n//     }\n// }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 200,
        "wires": [
            [
                "a1a568a9.606f68",
                "87801c95384a872a"
            ]
        ]
    },
    {
        "id": "1e6dee1e.a19ed2",
        "type": "comment",
        "z": "50470e7e.8037e",
        "name": "Before using you must make changes to settings.js - see the info bar for details.",
        "info": "//Connection to MQTT\nprocess.env.MQTT_PORT = 1883;\nprocess.env.MQTT_SERVER = \"192.168.0.102\";\nprocess.env.MQTT_USER=\"admin\";\nprocess.env.MQTT_PASS= \"admin\";\n\nprocess.env.CONFIG_PATH =__filename;\n\n/*========= Add this field inside module.exports*/\n\nfind the key named functionGlobalContext\n\nfunctionGlobalContext: {\nzlib:require('zlib')\n}\n",
        "x": 620,
        "y": 100,
        "wires": []
    },
    {
        "id": "44aa4947.64c5d8",
        "type": "comment",
        "z": "50470e7e.8037e",
        "name": "Libraries using",
        "info": "1. node-red-dashboard (2.29.3)",
        "x": 420,
        "y": 140,
        "wires": []
    },
    {
        "id": "5a4b00b8.476ba",
        "type": "comment",
        "z": "50470e7e.8037e",
        "name": "url : http://localhost:1880/ui",
        "info": "",
        "x": 660,
        "y": 140,
        "wires": []
    },
    {
        "id": "2db00c91.0e8644",
        "type": "ui_toast",
        "z": "50470e7e.8037e",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Delevering message",
        "name": "",
        "x": 950,
        "y": 280,
        "wires": []
    },
    {
        "id": "8ee158e3.9548a8",
        "type": "function",
        "z": "50470e7e.8037e",
        "name": "Push notification",
        "func": "msg.topic =\"Delevering message\";\nmsg.payload = msg.payload.length + (msg.payload.length>1?\" records\":\"record\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 280,
        "wires": [
            [
                "2db00c91.0e8644"
            ]
        ]
    },
    {
        "id": "bffbc85140cf4684",
        "type": "inject",
        "z": "50470e7e.8037e",
        "name": "Get log",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 370,
        "y": 1100,
        "wires": [
            [
                "36c69134d025cea0"
            ]
        ]
    },
    {
        "id": "36c69134d025cea0",
        "type": "function",
        "z": "50470e7e.8037e",
        "name": "",
        "func": "node.warn(global.get(\"real_time_payload_key\") || [])\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "57e747817b3536aa",
        "type": "inject",
        "z": "50470e7e.8037e",
        "name": "Clear log",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 380,
        "y": 1160,
        "wires": [
            [
                "9042a9b34ab19f00"
            ]
        ]
    },
    {
        "id": "9042a9b34ab19f00",
        "type": "function",
        "z": "50470e7e.8037e",
        "name": "",
        "func": "global.set(\"real_time_payload_key\",[]);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "7889676d47f05ce1",
        "type": "http in",
        "z": "50470e7e.8037e",
        "name": "",
        "url": "/realtime-status",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 420,
        "y": 540,
        "wires": [
            [
                "975b2eb32191af63"
            ]
        ]
    },
    {
        "id": "975b2eb32191af63",
        "type": "function",
        "z": "50470e7e.8037e",
        "name": "Handle Publish Realtime Status",
        "func": "/**\n * get current date time\n * @returns date time format dd/mm/yyyy \n */\nfunction getCurrentDate() {\n    var myDate = new Date(Date.now());\n    return (myDate.getFullYear() + '-' + ('0' + (myDate.getMonth() + 1)).slice(-2) + '-' + ('0' + myDate.getDate()).slice(-2) + ' ' + myDate.getHours() + ':' + ('0' + (myDate.getMinutes())).slice(-2) + ':' + myDate.getSeconds() + \".\" + myDate.getMilliseconds());\n}\nconst REAL_TIME_PAYLOAD_KEY = \"real_time_payload_key\";\n/**\n * Write payload to log array\n * @param {*} timestamp \n * @param {*} topic \n * @param {*} qos \n * @param {*} retain \n * @param {*} payload \n */\nfunction writeToLog(timestamp, topic, qos, retain, payload,type) {\n    var payloadArray = global.get(REAL_TIME_PAYLOAD_KEY) || [];\n  \n    payloadArray.push({\n        timestamp,\n        topic,\n        qos,\n        retain,\n        payload,\n        type\n    });\n    \n    global.set(REAL_TIME_PAYLOAD_KEY,payloadArray);\n\n}\n\nvar payload = msg.payload;\n\nvar qos = payload.qos;\nvar retain = payload.retain;\nvar topic = payload.topic;\nvar payload = payload.payload;\npayload.ts = Date.now();\n\nmsg.qos  = qos;\nmsg.retain = retain;\nmsg.topic = topic;\nmsg.payload = payload;\nwriteToLog(getCurrentDate(), msg.topic, msg.qos, msg.retain, payload,\"publish\");\nmsg.status =true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 540,
        "wires": [
            [
                "b0005df001457828",
                "28542160680dffba"
            ]
        ]
    },
    {
        "id": "b0005df001457828",
        "type": "http response",
        "z": "50470e7e.8037e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 620,
        "wires": []
    },
    {
        "id": "3e1fb83186bf34c6",
        "type": "catch",
        "z": "50470e7e.8037e",
        "name": "Catch Error Realtime status",
        "scope": [
            "7889676d47f05ce1",
            "975b2eb32191af63",
            "b0005df001457828",
            "28542160680dffba"
        ],
        "uncaught": false,
        "x": 440,
        "y": 620,
        "wires": [
            [
                "da375b08463bd36b"
            ]
        ]
    },
    {
        "id": "da375b08463bd36b",
        "type": "function",
        "z": "50470e7e.8037e",
        "name": "Set 404",
        "func": "msg.payload.error = msg.error;\n// msg.statusCode = 404;//resource not found\nmsg.payload.status = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 620,
        "wires": [
            [
                "b0005df001457828"
            ]
        ]
    },
    {
        "id": "28542160680dffba",
        "type": "mqtt out",
        "z": "50470e7e.8037e",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6e2ca8ae.a41228",
        "x": 1050,
        "y": 540,
        "wires": []
    },
    {
        "id": "fec385d04c81d663",
        "type": "http in",
        "z": "50470e7e.8037e",
        "name": "",
        "url": "/realtime-data.log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 400,
        "y": 800,
        "wires": [
            [
                "096c1949021518cf"
            ]
        ]
    },
    {
        "id": "096c1949021518cf",
        "type": "function",
        "z": "50470e7e.8037e",
        "name": "handle get log realtime ",
        "func": "try{\n    var log = global.get(\"real_time_payload_key\") ||[];\n    msg.payload ={};\n    // msg.payload.status =true;\n    \n    let logString = \"\";\n    log.forEach((v,i)=>{\n            logString += `${v.timestamp} ${v.type} message topic: ${v.topic} payload : ${v.payload.data ? Array.from(v.payload.data) : JSON.stringify(v.payload)} qos: ${v.qos} retain : ${v.retain} </br>`;\n    })\n    msg.payload = logString;\n    return msg;\n}catch(e){\n    msg.payload ={};\n    msg.payload.status = false;\n    \n    msg.payload.error = e + \"\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 800,
        "wires": [
            [
                "70ea9e87a15ad6db"
            ]
        ]
    },
    {
        "id": "70ea9e87a15ad6db",
        "type": "http response",
        "z": "50470e7e.8037e",
        "name": "response",
        "statusCode": "",
        "headers": {},
        "x": 1060,
        "y": 800,
        "wires": []
    },
    {
        "id": "63a8142e51357750",
        "type": "comment",
        "z": "50470e7e.8037e",
        "name": "get log real time data",
        "info": "",
        "x": 390,
        "y": 760,
        "wires": []
    },
    {
        "id": "dde97d6bd1df0522",
        "type": "http in",
        "z": "50470e7e.8037e",
        "name": "",
        "url": "/realtime-data-clear-log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 420,
        "y": 920,
        "wires": [
            [
                "74656ddd9845962c"
            ]
        ]
    },
    {
        "id": "74656ddd9845962c",
        "type": "function",
        "z": "50470e7e.8037e",
        "name": "Hanle Clear log",
        "func": "try{\n    var log = global.get(\"real_time_payload_key\") ||[];\n    msg.payload ={};\n    // msg.payload.status =true;\n    \n    msg.payload.data = log;\n    global.set(\"real_time_payload_key\",[]);\n    \n    return msg;\n}catch(e){\n    msg.payload ={};\n    msg.payload.status = false;\n    \n    msg.payload.error = e + \"\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 920,
        "wires": [
            [
                "0249d2d981257adf"
            ]
        ]
    },
    {
        "id": "0249d2d981257adf",
        "type": "http response",
        "z": "50470e7e.8037e",
        "name": "response",
        "statusCode": "",
        "headers": {},
        "x": 1040,
        "y": 920,
        "wires": []
    },
    {
        "id": "9a683625120b4dcd",
        "type": "comment",
        "z": "50470e7e.8037e",
        "name": "clear log real time data",
        "info": "",
        "x": 400,
        "y": 880,
        "wires": []
    },
    {
        "id": "87801c95384a872a",
        "type": "debug",
        "z": "50470e7e.8037e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 120,
        "wires": []
    },
    {
        "id": "a0b404bbbcc08bca",
        "type": "function",
        "z": "6bbbadace53fbd6c",
        "name": "Set base path",
        "func": "//restrict to c:\\temp\\\nvar basePath = \"c:\\\\temp\\\\\";\nvar filename = msg.req.params.fn;\n\n\nif(filename.includes(\"..\\\\\")){\n    msg.payload = \"Illegal file path\";\n    msg.statusCode = 405;//not allowed\n    return [null, msg];//fire output 2\n} else if(filename.includes(\"../\")){\n    msg.payload = \"Illegal file path\";\n    msg.statusCode = 405;//not allowed\n    return [null, msg];//fire output 2\n} \n//TODO: add more checks\n\nmsg.filename = basePath + filename;\nreturn [msg, null];//fire output 1\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 280,
        "wires": [
            [
                "373a5a9c8ccb4000"
            ],
            [
                "4b92ffc83b330e14"
            ]
        ]
    },
    {
        "id": "4b92ffc83b330e14",
        "type": "http response",
        "z": "6bbbadace53fbd6c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 830,
        "y": 320,
        "wires": []
    },
    {
        "id": "373a5a9c8ccb4000",
        "type": "file in",
        "z": "6bbbadace53fbd6c",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 670,
        "y": 260,
        "wires": [
            [
                "4b92ffc83b330e14"
            ]
        ]
    },
    {
        "id": "32110d9212f80df5",
        "type": "catch",
        "z": "6bbbadace53fbd6c",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 300,
        "y": 360,
        "wires": [
            [
                "2911624ddbfb8218",
                "0ab2daa400553010"
            ]
        ]
    },
    {
        "id": "2911624ddbfb8218",
        "type": "function",
        "z": "6bbbadace53fbd6c",
        "name": "Set 404",
        "func": "msg.payload = msg.error;\nmsg.statusCode = 404;//resource not found\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 360,
        "wires": [
            [
                "4b92ffc83b330e14"
            ]
        ]
    },
    {
        "id": "0ab2daa400553010",
        "type": "debug",
        "z": "6bbbadace53fbd6c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 430,
        "y": 520,
        "wires": []
    },
    {
        "id": "69068eeadaec3c32",
        "type": "ui_template",
        "z": "6bbbadace53fbd6c",
        "group": "dfb4a60f.d788f8",
        "name": "ui_temlplate - present download links on dashboard",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<div >\n    <a href=\"/files/log.log\">download log.log</a>\n    <a href=\"/files/log2.log\">download log2.log</a>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 670,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d4692b904bfc0632",
        "type": "comment",
        "z": "6bbbadace53fbd6c",
        "name": "Create http endpoint <nodered>/files/xxx  where xxx is the file name to download",
        "info": "",
        "x": 520,
        "y": 220,
        "wires": []
    },
    {
        "id": "9cc8a83198e3b78e",
        "type": "http in",
        "z": "6bbbadace53fbd6c",
        "name": "",
        "url": "/files/:fn",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 270,
        "y": 280,
        "wires": [
            [
                "a0b404bbbcc08bca"
            ]
        ]
    },
    {
        "id": "5061d16fd4bd66b1",
        "type": "debug",
        "z": "6bbbadace53fbd6c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 120,
        "y": 120,
        "wires": []
    },
    {
        "id": "aa10f227bdff0d9a",
        "type": "mqtt in",
        "z": "fb66af5fb4c37143",
        "name": "Subscribe(\"{trainID}/data-upload/request\",DATA_UPLOAD_REQUEST_COMMAND)",
        "topic": "aemr_810001/data-upload/request",
        "qos": "2",
        "datatype": "auto",
        "broker": "6e2ca8ae.a41228",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 390,
        "y": 160,
        "wires": [
            [
                "bcfc2bf029dd9ede"
            ]
        ]
    },
    {
        "id": "bcfc2bf029dd9ede",
        "type": "function",
        "z": "fb66af5fb4c37143",
        "name": "Convert Json to Object",
        "func": "let payload = JSON.parse(msg.payload);\nmsg.topicDataUploadRequest = msg.topic;\nmsg.dataUploadRequest = payload;\nmsg.payload = payload;\nglobal.set(\"payloadDataUploadRequest\",{\n    topic:msg.topic,\n    payload:payload\n})\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 160,
        "wires": [
            [
                "1109b27d15afb8bb",
                "b2cfe8a262d0be14"
            ]
        ]
    },
    {
        "id": "1253eb944c9c5bcc",
        "type": "mqtt out",
        "z": "fb66af5fb4c37143",
        "name": "Publish(\"{trainID}/data-upload/available\",DATA_UPLOAD_AVAILABLE)",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9d49dbb0c964b212",
        "x": 1010,
        "y": 400,
        "wires": []
    },
    {
        "id": "1109b27d15afb8bb",
        "type": "function",
        "z": "fb66af5fb4c37143",
        "name": "publish Data Avaiable",
        "func": "function getCurrentDate() {\n    var myDate = new Date(Date.now());\n    return (myDate.getFullYear() + '-' + ('0' + (myDate.getMonth() + 1)).slice(-2) + '-' + ('0' + myDate.getDate()).slice(-2) + ' ' + myDate.getHours() + ':' + ('0' + (myDate.getMinutes())).slice(-2) + ':' + myDate.getSeconds() + \".\" + myDate.getMilliseconds());\n}\n\nvar payloadDataUploadRequest = msg.payload;\nglobal.set(\"dataUploadRequest\", payloadDataUploadRequest);\n\nvar dataUploadAvaiable = global.get(\"dataUploadAvaiable\");\n\nconst TIME_DELAY = parseInt(dataUploadAvaiable.timePublish) * 1000 || 500;\n   \nvar percentIncrement = parseInt(dataUploadAvaiable.percentIncrement);\n  \nvar maxProgress = parseInt(dataUploadAvaiable.fetchProgress);\n    \nvar currentPercent = 0;     \nif (dataUploadAvaiable) {\n    \n    //get train id from data upload request\n    let trainId = msg.topic.substring(0, msg.topic.indexOf(\"/\"));\n\n    msg.topic = trainId + \"/data-upload/available\";\n    \n    msg.qos = 2;\n    \n    msg.topicDataUploadAvaiable = msg.topic;\n    \n     const fileTransferUid = dataUploadAvaiable.fileTransferUid;\n    \n     var payload = {\n            ts: getCurrentDate(),\n            fileTransferUid,\n            filename: \"\",\n            fileType: \"\",\n            fileSize: \"\",\n            fetchProgress: currentPercent,\n            status: dataUploadAvaiable.status\n        }\n    \n    // pubish first message directly\n    msg.payload = payload;\n    msg.dataUploadAvaiable = payload;\n    node.send(msg);\n\n    \n    // send message loop\n    var loop = setInterval(async () => {\n        currentPercent += percentIncrement;\n        payload = {\n            ts: getCurrentDate(),\n            fileTransferUid,\n            filename: \"\",\n            fileType: \"\",\n            fileSize: \"\",\n            fetchProgress: currentPercent,\n            status: dataUploadAvaiable.status\n\n        }\n        \n\n        if (currentPercent >= maxProgress) {\n           \n            var fileName = maxProgress == 100? dataUploadAvaiable.filename :\"\";\n            var fileType = maxProgress == 100? dataUploadAvaiable.fileType :\"\";\n            var fileSize = maxProgress == 100? dataUploadAvaiable.fileSize :\"\";\n            payload = {\n                ts: getCurrentDate(),\n                fileTransferUid,\n                filename: fileName ,\n                fileType: fileType,\n                fileSize: fileSize,\n                fetchProgress: maxProgress,\n                status: dataUploadAvaiable.status\n\n            }\n            \n            global.set(\"payloadDataUploadAvaiable\",\n            {topic:msg.topic,\n            payload:payload\n            })\n            clearInterval(loop);\n            \n          \n        }\n            msg.dataUploadAvaiable = payload;\n            msg.payload = payload;\n   \n            node.send(msg);\n\n    }, TIME_DELAY);\n\n\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 300,
        "wires": [
            [
                "1253eb944c9c5bcc",
                "b2cfe8a262d0be14"
            ]
        ]
    },
    {
        "id": "3ca9a210e7bb06da",
        "type": "mqtt in",
        "z": "fb66af5fb4c37143",
        "name": "Subscribe(\"{trainID}/data-upload/send\",DATA_UPLOAD_SEND_COMMAND)",
        "topic": "aemr_810001/data-upload/send",
        "qos": "1",
        "datatype": "auto",
        "broker": "9d49dbb0c964b212",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 830,
        "y": 460,
        "wires": [
            [
                "976ccaf69ac34beb"
            ]
        ]
    },
    {
        "id": "7876f91fcdf9db0d",
        "type": "function",
        "z": "fb66af5fb4c37143",
        "name": "Util method",
        "func": "function sha512(str) {\n  return crypto.subtle.digest(\"SHA-512\", new TextEncoder(\"utf-8\").encode(str)).then(buf => {\n    return Array.prototype.map.call(new Uint8Array(buf), x=>(('00'+x.toString(16)).slice(-2))).join('');\n  });\n}\nsha512(\"my string for hashing\").then(x => node.warn(x));",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "86f2f2a4b498fb79",
        "type": "inject",
        "z": "fb66af5fb4c37143",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 80,
        "wires": [
            [
                "7876f91fcdf9db0d"
            ]
        ]
    },
    {
        "id": "bc67a4b0c7709fc8",
        "type": "function",
        "z": "fb66af5fb4c37143",
        "name": "FTP put",
        "func": "\n\nvar dataUploadAvaiable = global.get(\"dataUploadAvaiable\");\n\nlet filename = \"./\"+msg.payload.storageURL +\"/\" + dataUploadAvaiable.filename;\n\nlet filedata= dataUploadAvaiable.fileData;\nnode.warn(filedata)\nmsg.payload ={}\n\nmsg.payload.filename =filename\nmsg.payload.filedata = filedata;\n\n// msg.user = env.get(\"FTP_USER\");\n// msg.password = env.get(\"FTP_PASS\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2020,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "2fd5ccbee09679cf",
        "type": "ui_template",
        "z": "fb66af5fb4c37143",
        "d": true,
        "group": "997369405d6245fb",
        "name": "Config_tempalate",
        "order": 3,
        "width": "22",
        "height": "10",
        "format": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <title>Title</title>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n\n    <!-- my javascript -->\n\n    <style>\n        .or-seperator {\n            margin-top: 20px;\n            text-align: center;\n            border-top: 1px solid #ccc;\n        }\n\n        .or-seperator i {\n            cursor: pointer;\n            padding: 0 10px;\n            background: #f7f7f7;\n            position: relative;\n            top: -11px;\n            z-index: 1;\n            transition: 0.4s;\n\n        }\n\n        .or-seperator i:hover {\n            background: #dbdada;\n\n\n        }\n\n        .or-seperator i.arrow {\n            padding: 0 10px;\n            background: #f7f7f7;\n            position: relative;\n            top: -11px;\n            z-index: 1;\n\n        }\n\n        .border-line::before {\n            width: 100%;\n            content: \"\";\n            border-top: 1px solid rgb(87, 86, 86);\n            margin-bottom: 20px;\n        }\n\n        .error-border {\n            border-color: red;\n        }\n    </style>\n</head>\n\n<body>\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"or-seperator\">\n                    <i id=\"config-label\">Require Config\n                        <span class=\"arrow\">&#8659;</span>\n                    </i>\n\n\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- config area -->\n    <div class=\"container\" id=\"config-form\">\n        <!-- Publish data upload avaiable  -->\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <h3>Publish data upload avaiable</h3>\n\n            </div>\n            <div class=\"col-sm-12\">\n                <table class=\"table\">\n                    <thead class=\"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">ts</th>\n                            <th scope=\"col\">fileTransferUid</th>\n                            <th scope=\"col\">filename</th>\n                            <th scope=\"col\">fileType</th>\n                            <th scope=\"col\">fileSize</th>\n                            <th scope=\"col\">fetchProgress</th>\n                            <th scope=\"col\">status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">1</th>\n                            <td>Mark</td>\n                            <td><input type=\"file\" id=\"fileName\"></td>\n                            <td><input type=\"number\" class=\"form-control \" min=\"0\" max=\"255\" value=\"0\"\n                                    placeholder=\"0-255\" id=\"fileType\"></td>\n                            <td><span id=\"fileSize\"></span></td>\n                            <td>fetchProgress</td>\n                            <td>\n                                <div class=\"form-group\">\n                                    <select id=\"selectStatus\" class=\"form-control \">\n                                        <option value=\"0\"> 0</option>\n                                        <option value=\"1\"> 1</option>\n                                        <option value=\"2\"> 2</option>\n                                        <option value=\"3\"> 3</option>\n                                        <option value=\"4\"> 4</option>\n                                        <option value=\"5\"> 5</option>\n                                        <option value=\"6\"> 6</option>\n                                        <option value=\"7\"> 7</option>\n                                        <option value=\"7\"> 8</option>\n                                    </select>\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <!--End Publish data upload avaiable  -->\n        <!--Publish data upload sent  -->\n        <div class=\"row border-line\">\n            <div class=\"col-sm-12\">\n                <h3>Publish data upload sent</h3>\n\n            </div>\n            <div class=\"col-sm-12\">\n                <table class=\"table\">\n                    <thead class=\"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">ts</th>\n                            <th scope=\"col\">fileTransferUid</th>\n                            <th scope=\"col\">storageURL</th>\n                            <th scope=\"col\">fileUploadResult</th>\n                            <th scope=\"col\">fileChecksum</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">1</th>\n                            <td>fileTransferUid</td>\n                            <td>storageURL</td>\n                            <td>\n                                <div class=\"form-group\">\n                                    <select id=\"selectFileUploadResult\" class=\"form-control w-25\">\n                                        <option value=\"0\"> 0</option>\n                                        <option value=\"1\"> 1</option>\n                                        <option value=\"2\"> 2</option>\n                                        <option value=\"3\"> 3</option>\n                                        <option value=\"4\"> 4</option>\n\n                                    </select>\n                                </div>\n                            </td>\n                            <td>fileChecksum</td>\n\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <!--End Publish data upload sent  -->\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <button type=\"button\" id=\"save\" class=\"btn btn-success w-100\">Save</button>\n            </div>\n        </div>\n\n    </div>\n\n\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n    <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\n        integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\n        crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"\n        integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\"\n        crossorigin=\"anonymous\"></script>\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"\n        integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\"\n        crossorigin=\"anonymous\"></script>\n\n\n    <!-- Latest compiled and minified CSS -->\n    <link rel=\"stylesheet\"\n        href=\"https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css\">\n\n    <!-- Latest compiled and minified JavaScript -->\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js\"></script>\n\n\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n\n    <script type=\"text/javascript\">\n\n        function bytesToSize(bytes) {\n            var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n            if (bytes == 0) return '0 Byte';\n            var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n            return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n        }\n\n        var showInvalidInput = (field, errorContent) => {\n            $(field).text(errorContent);\n        }\n        var hideInvalidInput = (field) => {\n            $(field).text(\"\");\n        }\n\n        var TIME_OUT_ERR_AS_MS = 3000;\n        var CLASS_ERROR_BORDER = \"error-border\";\n        // id need to handle\n        var fileNameInput = $(\"#fileName\");\n        var saveButton = $(\"#save\");\n        var fileSizeSpanId = $(\"#fileSize\");\n        var fileTypeInputId = $(\"#fileType\");\n        var configFormId = $(\"#config-form\");\n        var configLabelId = $(\"#config-label\");\n        var configFlowDetailLabelId = $(\"#flow-detail-config-label\");\n        var flowDetailId = $(\"#flow-detail\");\n        var selectStatusId = $(\"#selectStatus\");\n\n\n        var fileUploadResultSelectId = $(\"#selectFileUploadResult\");\n        // payload data\n\n        //data upload avaiable\n        var fileName = \"\";\n        var fileData = \"\";\n        var fileSize = \"\";\n        var fileType = 0;\n        var status =0;\n        //<=========================== HANDLE AREA ======================================>\n\n        var handleReadFile = function (event) {\n\n            var file = fileNameInput[0].files[0];\n            if (file) { // if file exist\n\n                fileName = file.name;\n                fileSize = file.size;\n\n                let fileSizeConvert = bytesToSize(file.size)\n                fileSizeSpanId.text(fileSizeConvert)\n\n                var reader = new FileReader();\n                reader.readAsBinaryString(file);\n\n                reader.onload = function () {\n                    fileData = reader.result;\n\n                };\n                reader.onerror = function () {\n                    console.log('Error while reading files');\n                };\n\n            } else {\n                // todo with file is not exist\n\n                // scope.send({ payload: null })\n            }\n\n        }\n\n        //<=========================== END HANDLE AREA ======================================>    \n        fileNameInput.on('change', handleReadFile);\n\n        (function (scope) {\n\n\n\n        saveButton.on(\"click\", function (e) {\n\n            fileType = parseInt(fileTypeInputId.val());\n            // check user input\n            if (fileName.length === 0 || fileType < 0 || fileType > 255) {\n                if (fileName.length === 0) {\n\n                }\n                if (fileType < 0) {\n\n                }\n                if (fileType > 255) {\n\n                }\n\n\n            } else {\n                let dataUploadAvaible = {\n                    filename:fileName,\n                    fileData,\n                    fileType: fileType,\n                    fileSize:fileSize,\n                    status: selectStatusId.val()\n                }\n                let dataUploadSent = {\n                    fileUploadResult: fileUploadResultSelectId.val()\n                }\n\n                let payload = {\n                    dataUploadAvaible,\n                    dataUploadSent\n                }\n                $.ajax({\n                    url: \"/update-payload\",\n                    type: \"POST\",\n                    data: payload,\n                    cache: false,\n                    success: function (res) {\n                        console.log(res);\n                    }\n                });\n\n                // scope.send({\n                //     dataUploadAvaible,\n                //     dataUploadSent\n                // })\n            }\n\n\n        })\n\n        })(scope);\n\n        var handelConfigLabel = (e) => {\n            // check if is open\n            if (configFormId.css(\"display\") == \"none\") {\n                configFormId.css(\"display\", \"\");\n            } else {\n\n                configFormId.css(\"display\", \"none\");\n            }\n            // configFormId.slideToggle(\"slow\");\n        }\n\n        var handleConfigLabelDetail = (e) => {\n            console.log(\"ok\");\n            // check if is open\n            if (flowDetailId.css(\"display\") == \"none\") {\n                flowDetailId.css(\"display\", \"\");\n            } else {\n\n                flowDetailId.css(\"display\", \"none\");\n            }\n        }\n\n        $(document).ready(function () {\n            configLabelId.on(\"click\", handelConfigLabel)\n            // configFlowDetailLabelId.on(\"click\", handleConfigLabelDetail);\n\n          \n        });\n    </script>\n\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 310,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "9e229e92917673f6",
        "type": "debug",
        "z": "fb66af5fb4c37143",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2360,
        "y": 580,
        "wires": []
    },
    {
        "id": "97e33a08f85cfc97",
        "type": "http in",
        "z": "fb66af5fb4c37143",
        "name": "",
        "url": "/update-payload",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 340,
        "y": 800,
        "wires": [
            [
                "e4e937d5eb219361",
                "28596dfc62ddcfec"
            ]
        ]
    },
    {
        "id": "96fd6364b0073b2e",
        "type": "http response",
        "z": "fb66af5fb4c37143",
        "name": "",
        "x": 990,
        "y": 800,
        "wires": []
    },
    {
        "id": "e4e937d5eb219361",
        "type": "function",
        "z": "fb66af5fb4c37143",
        "name": "return msg.payload to client",
        "func": "try {\n\n    var payload = msg.payload;\n    global.set(\"dataUploadAvaiable\", payload.dataUploadAvaible);\n    global.set(\"dataUploadSent\", payload.dataUploadSent);\n    msg.payload ={};\n    msg.payload.status =true;\n    msg.payload.data = payload;\n    return msg;\n} catch (e) {\n    msg.payload ={};\n    msg.payload.status = false;\n    \n    msg.payload.error = e + \"\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 800,
        "wires": [
            [
                "96fd6364b0073b2e"
            ]
        ]
    },
    {
        "id": "994ba725b26389dd",
        "type": "comment",
        "z": "fb66af5fb4c37143",
        "name": "Form Submission",
        "info": "",
        "x": 320,
        "y": 720,
        "wires": []
    },
    {
        "id": "28596dfc62ddcfec",
        "type": "debug",
        "z": "fb66af5fb4c37143",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 720,
        "wires": []
    },
    {
        "id": "b2cfe8a262d0be14",
        "type": "ui_template",
        "z": "fb66af5fb4c37143",
        "group": "997369405d6245fb",
        "name": "Detail_template",
        "order": 0,
        "width": "22",
        "height": "22",
        "format": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <title>Title</title>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n\n    <!-- my javascript -->\n\n    <!-- front awesome -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\"\n        integrity=\"sha512-1ycn6IcaQQ40/MKBW2W4Rhis/DbILU74C1vSrLJxCq57o941Ym01SwNsOMqvEBFlcgUa6xLiPY/NS5R+E6ztJQ==\"\n        crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\n    <style>\n        .or-seperator {\n            margin-top: 20px;\n            text-align: center;\n            border-top: 1px solid #ccc;\n        }\n\n        .or-seperator i {\n            cursor: pointer;\n            padding: 0 10px;\n            background: #f7f7f7;\n            position: relative;\n            top: -11px;\n            z-index: 1;\n            transition: 0.4s;\n\n        }\n\n        .or-seperator i:hover {\n            background: #dbdada;\n\n\n        }\n\n        .or-seperator i.arrow {\n            padding: 0 10px;\n            background: #f7f7f7;\n            position: relative;\n            top: -11px;\n            z-index: 1;\n\n        }\n\n        .border-line::before {\n            width: 100%;\n            content: \"\";\n            border-top: 1px solid rgb(87, 86, 86);\n            margin-bottom: 20px;\n        }\n\n        /* error css */\n        .error-border {\n            border-color: red;\n        }\n\n        .error-notification {\n            font-size: 13px;\n            color: #d93025;\n            visibility: hidden;\n\n        }\n\n        .error-notification.is-visible {\n            visibility: visible;\n        }\n\n        .error-text {\n            display: none;\n            position: absolute;\n            top: 50px;\n            font-size: 10px;\n            color: red;\n        }\n\n        /*      table css  */\n        table {\n            border-collapse: collapse;\n            table-layout: fixed;\n            /* width: 310px; */\n        }\n\n        table td {\n\n            /* width: 100px; */\n            word-wrap: break-word;\n            overflow: hidden;\n        }\n\n        table th {\n            overflow: hidden;\n            /* border: solid 1px #fab; */\n            /* width: 100px; */\n            /* word-wrap: break-word; */\n        }\n\n        /* .my-custom-scrollbar {\n            position: relative;\n            width: 100%;\n            overflow-x: auto;\n        }\n\n        .table-wrapper-scroll-x {\n            display: block;\n        } */\n\n        .setting-icon {\n            cursor: pointer;\n        }\n\n        /* pop up */\n        /* 1. Ensure this sits above everything when visible */\n        .modals {\n            background-color: #0807077d;\n            position: absolute;\n            z-index: 10000;\n            /* 1 */\n            top: 0;\n            left: 0;\n            visibility: hidden;\n            width: 100%;\n            height: 100%;\n        }\n\n        .modals.is-visible {\n            visibility: visible;\n\n        }\n\n        .modals-overlay {\n            position: fixed;\n            z-index: 10;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: hsla(0, 0%, 0%, 0.5);\n            visibility: hidden;\n            opacity: 0;\n            transition: visibility 0s linear 0.3s, opacity 0.3s;\n        }\n\n        .modals.is-visible .modals-overlay {\n            opacity: 1;\n            visibility: visible;\n            transition-delay: 0s;\n        }\n\n        .modals-wrapper {\n            position: absolute;\n            z-index: 9999;\n            top: 6em;\n            left: 40%;\n            width: 50%;\n            height: 400px;\n            margin-left: -16em;\n            background-color: #fff;\n            box-shadow: 0 0 1.5em hsla(0, 0%, 0%, 0.35);\n        }\n\n        .modals-transition {\n            transition: all 0.3s 0.12s;\n            transform: translateY(-10%);\n            opacity: 0;\n        }\n\n        .modals.is-visible .modals-transition {\n            transform: translateY(0);\n            opacity: 1;\n        }\n\n        .modals-header,\n        .modals-content {\n            padding: 1em;\n        }\n\n        .modals-header {\n            position: relative;\n            background-color: #fff;\n            box-shadow: 0 1px 2px hsla(0, 0%, 0%, 0.06);\n            border-bottom: 1px solid #e8e8e8;\n        }\n\n        .modals-close {\n            position: absolute;\n            top: 0;\n            right: 0;\n            padding: 1em;\n            color: #aaa;\n            background: none;\n            border: 0;\n        }\n\n        .modals-close:hover {\n            color: #777;\n        }\n\n        .modals-heading {\n            font-size: 1.125em;\n            margin: 0;\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n        }\n\n        .modals-content>*:first-child {\n            margin-top: 0;\n        }\n\n        .modals-content>*:last-child {\n            margin-bottom: 0;\n        }\n\n        div.wrap {\n            padding: 0 10px 0 10px;\n        }\n\n        div.wrap div {\n\n            position: relative;\n        }\n\n\n        div.wrap div label {\n\n            position: absolute;\n            top: 0;\n            font-size: 15px;\n            margin: 10px;\n            padding: 0 10px;\n            -webkit-transition: top .2s ease-in-out,\n                font-size .2s ease-in-out;\n            transition: top .2s ease-in-out,\n                font-size .2s ease-in-out;\n        }\n\n        div.wrap div input[type=number] {\n            width: 100%;\n            padding: 5px;\n\n            /* font-size: 20px; */\n\n\n        }\n\n        div.wrap div input[type=number]:focus {\n            outline: none;\n        }\n\n        .active {\n            top: -25px !important;\n            font-size: 12px !important;\n            background-color: white;\n        }\n\n\n\n        .custom-file-upload {\n            border: 1px solid #ccc;\n            display: inline-block;\n            padding: 6px 10px;\n            cursor: pointer;\n        }\n\n        .custom-file-upload input[type=\"file\"] {\n            display: none;\n        }\n    </style>\n</head>\n\n<body>\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"or-seperator\">\n                    <i id=\"config-label\">Require Config\n                        <span class=\"arrow\">&#8659;</span>\n                    </i>\n\n\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- config area -->\n    <div class=\"container\" id=\"config-form\">\n        <!-- Publish data upload avaiable  -->\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <h3>Publish data upload avaiable</h3>\n\n            </div>\n            <div class=\"col-sm-12\">\n                <table class=\"table table-bordered table-hover\">\n                    <thead class=\"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">ts</th>\n                            <th scope=\"col\">fileTransferUid</th>\n                            <th scope=\"col\">filename</th>\n                            <th scope=\"col\">fileType</th>\n                            <th scope=\"col\">fileSize</th>\n                            <th scope=\"col\">fetchProgress</th>\n                            <th scope=\"col\">status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td scope=\"row\">1</td>\n                            <td><input class=\"form-control \" min=\"0\" value=\"123\" type=\"number\" id=\"fileTransferUid\">\n                            </td>\n                            <td>\n                                <div class=\"help-block error-text\">\n                                    *Requrie</div>\n                                <!-- <input type=\"file\" id=\"fileName\"> -->\n                                <label class=\"custom-file-upload\">\n                                    <input type=\"file\" id=\"fileName\" />\n                                    <i class=\"fas fa-cloud-upload-alt\"></i>\n                                    <span id=\"show-file-name\">Choose File</span>\n                                </label>\n                            </td>\n                            <td>\n                                <div class=\"help-block error-text\">\n                                    *Requrie</div>\n                                <input type=\"number\" class=\"form-control \" min=\"0\" max=\"255\" value=\"0\"\n                                    placeholder=\"0-255\" id=\"fileType\">\n                            </td>\n                            <td><span id=\"fileSize\"></span></td>\n                            <td class=\"d-flex\" style=\"border: none;\">\n                                <div class=\"help-block error-text\">\n                                    *Requrie</div>\n                                <input max=\"100\" min=\"0\" id=\"fetchProgress\" class=\"form-control \" type=\"number\">\n                                <i id=\"settingFetchProgress\" href=\"#popup1\"\n                                    class=\"fas fa-cog setting-icon settingFetchProgress\"\n                                    style=\"/* padding-left: 5px; */margin-left: 5px;align-self: center;\"></i>\n                            </td>\n                            <td>\n                                <div class=\"form-group\">\n                                    <select id=\"selectStatus\" class=\"form-control \">\n                                        <option value=\"0\"> 0 : N/A</option>\n                                        <option value=\"1\"> 1 : Error, data not available</option>\n                                        <option value=\"2\"> 2 : Error, sub-system unavailable</option>\n                                        <option value=\"3\"> 3 : Error, data type unknown</option>\n                                        <option value=\"4\"> 4 : Error, timeframe unavailable</option>\n                                        <option value=\"5\"> 5 : Energy Meter Result 0</option>\n                                        <option value=\"6\"> 6 : Energy Meter Result 1</option>\n                                        <option value=\"7\"> 7 : Energy Meter Result 2</option>\n                                        <option value=\"7\"> 8 : Energy Meter Result 3</option>\n                                    </select>\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <!--End Publish data upload avaiable  -->\n        <!--Publish data upload sent  -->\n        <div class=\"row border-line\">\n            <div class=\"col-sm-12\">\n                <h3>Publish data upload sent</h3>\n\n            </div>\n            <div class=\"col-sm-12\">\n                <table class=\"table table-bordered table-hover\">\n                    <thead class=\"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">ts</th>\n                            <th scope=\"col\">fileTransferUid</th>\n                            <th scope=\"col\">storageURL</th>\n                            <th scope=\"col\">fileUploadResult</th>\n                            <th scope=\"col\">fileChecksum</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">1</th>\n                            <td>fileTransferUid</td>\n                            <td>storageURL</td>\n                            <td>\n                                <div class=\"form-group\">\n                                    <select id=\"selectFileUploadResult\" class=\"form-control \">\n                                        <option value=\"0\"> 0 : N/A</option>\n                                        <option selected value=\"1\"> 1 : Upload OK</option>\n                                        <option value=\"2\"> 2 : Upload aborted</option>\n                                        <option value=\"3\"> 3 : Upload could not start</option>\n                                        <option value=\"4\"> 4 : Upload timed out</option>\n\n                                    </select>\n                                </div>\n                            </td>\n                            <td>fileChecksum</td>\n\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <!--End Publish data upload sent  -->\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <button type=\"button\" id=\"save\" class=\"btn btn-success w-100\">Save Config</button>\n            </div>\n        </div>\n\n    </div>\n    <!-- setting pop-up -->\n    <div class=\"modals\">\n\n        <div class=\"modals-wrapper modals-transition\">\n            <div class=\"modals-header\">\n                <i class=\"fas fa-times\" id=\"closeSettingFetchProgress\" style=\"float: right;cursor: pointer;\"></i>\n                <h2 class=\"modals-heading text-center\">Setting Fetch Progess</h2>\n            </div>\n\n            <div class=\"row wrap mt-3\" id=\"settingDataUploadAvailableForm\">\n                <div class=\"col-sm-6\">\n                    <label class=\"active\" for=\"maxProgress\">Max progess</label>\n                    <input id=\"maxProgress\" type=\"number\" />\n                    <div class=\"error-notification\">\n                        <i class=\"fas fa-info-circle\"></i>\n                        <span></span>\n                    </div>\n                </div>\n                <div class=\"col-sm-6\">\n                    <label class=\"active\" for=\"timePublish\">Time publish per payload (Second)</label>\n                    <input id=\"timePublish\" type=\"number\" />\n                    <div class=\"error-notification\">\n                        <i class=\"fas fa-info-circle\"></i>\n                        <span></span>\n                    </div>\n                </div>\n\n                <div class=\"col-sm-12 mt-5\">\n                    <label class=\"active\" for=\"percentIncerment\">Percent increment per time</label>\n                    <input id=\"percentIncerment\" type=\"number\" />\n                    <div class=\"error-notification\">\n                        <i class=\"fas fa-info-circle\"></i>\n                        <span></span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"btn btn-info w-25\" id=\"btnSaveSettingUplodaAvaiable\" style=\"position: absolute;\n            bottom: 5px; left: calc(50% - 12%);\">Save setting</div>\n        </div>\n    </div>\n    <!-- flow detail -->\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"or-seperator\">\n                    <i id=\"flow-detail-config-label\">Flow Detail\n                        <span class=\"arrow\">&#8659;</span>\n                    </i>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"container\" style=\"display: none;\" id=\"flow-detail\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <h3>Subscribe data upload request</h3>\n                <p>topic : <span style=\"font-weight: bold;\">{{msg.topicDataUploadRequest}}</span></p>\n            </div>\n            <div class=\"col-sm-12\">\n                <table class=\"table table-bordered table-hover  table-wrapper-scroll-x my-custom-scrollbar\">\n                    <thead class=\"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">ts</th>\n                            <th scope=\"col\">fileTransferUid</th>\n                            <th scope=\"col\">fileType</th>\n                            <th scope=\"col\">fileSubType</th>\n                            <th scope=\"col\">downloadOption</th>\n                            <th scope=\"col\">vehicleId</th>\n                            <th scope=\"col\">fromDate</th>\n                            <th scope=\"col\">toDate</th>\n                            <th scope=\"col\">requestSize</th>\n                            <th scope=\"col\">transferMethod</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td scope=\"row\">{{msg.dataUploadRequest.ts}}</td>\n                            <td>{{msg.dataUploadRequest.fileTransferUid}}</td>\n                            <td>{{msg.dataUploadRequest.fileType}}</td>\n                            <td>{{msg.dataUploadRequest.fileSubType}}</td>\n                            <td>{{msg.dataUploadRequest.downloadOption}}</td>\n                            <td>{{msg.dataUploadRequest.vehicleId}}</td>\n                            <td>{{msg.dataUploadRequest.fromDate}}</td>\n                            <td>{{msg.dataUploadRequest.toDate}}</td>\n                            <td>{{msg.dataUploadRequest.requestSize}}</td>\n                            <td>{{msg.dataUploadRequest.transferMethod}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n\n        <!-- Publish data upload avaiable  -->\n        <div class=\"row border-line\">\n            <div class=\"col-sm-12\">\n                <h3>Publish data upload avaiable</h3>\n                <p>topic : <span style=\"font-weight: bold;\">{{msg.topicDataUploadAvaiable}}</span></p>\n            </div>\n            <div class=\"col-sm-12\">\n                <table class=\"table table-bordered table-hover\">\n                    <thead class=\"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">ts</th>\n                            <th scope=\"col\">fileTransferUid</th>\n                            <th scope=\"col\">filename</th>\n                            <th scope=\"col\">fileType</th>\n                            <th scope=\"col\">fileSize</th>\n                            <th scope=\"col\">fetchProgress</th>\n                            <th scope=\"col\">status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td scope=\"row\">{{msg.dataUploadAvaiable.ts}}</td>\n                            <td>{{msg.dataUploadAvaiable.fileTransferUid}}</td>\n                            <td>{{msg.dataUploadAvaiable.filename}}</td>\n                            <td>{{msg.dataUploadAvaiable.fileType}}</td>\n                            <td>{{msg.dataUploadAvaiable.fileSize}}</td>\n                            <td>{{msg.dataUploadAvaiable.fetchProgress}}</td>\n                            <td>\n                                {{msg.dataUploadAvaiable.status}}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <!--End Publish data upload avaiable  -->\n\n        <!--Subscribe data upload send  -->\n        <div class=\"row border-line\">\n            <div class=\"col-sm-12\">\n                <h3>Subscribe data upload send</h3>\n                <p>topic : <span style=\"font-weight: bold;\">{{msg.topicDataUploadSend}}</span></p>\n            </div>\n            <div class=\"col-sm-12\">\n                <table class=\"table table-bordered table-hover\">\n                    <thead class=\"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">ts</th>\n                            <th scope=\"col\">fileTransferUid</th>\n                            <th scope=\"col\">storageURL</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">{{msg.dataUploadSend.ts}}</th>\n                            <td>{{msg.dataUploadSend.fileTransferUid}}</td>\n                            <td>{{msg.dataUploadSend.storageURL}}</td>\n\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <!--End Subscribe data upload send  -->\n\n        <!--Publish data upload sent  -->\n        <div class=\"row border-line\">\n            <div class=\"col-sm-12\">\n                <h3>Publish data upload sent</h3>\n                <p>topic : <span style=\"font-weight: bold;\">{{msg.topicDataUploadSent}}</span></p>\n            </div>\n            <div class=\"col-sm-12\">\n                <table class=\"table table-bordered table-hover\">\n                    <thead class=\"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">ts</th>\n                            <th scope=\"col\">fileTransferUid</th>\n                            <th scope=\"col\">storageURL</th>\n                            <th scope=\"col\">fileUploadResult</th>\n                            <th scope=\"col\">fileChecksum</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">{{msg.dataUploadSent.ts}}</th>\n                            <td>{{msg.dataUploadSent.fileTransferUid}}</td>\n                            <td>{{msg.dataUploadSent.storageURL}}</td>\n                            <td>{{msg.dataUploadSent.fileUploadResult}}</td>\n                            <td>{{msg.dataUploadSent.fileChecksum}}</td>\n\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <!--End Publish data upload sent  -->\n        <!--Subscribe data upload Received  -->\n        <div class=\"row border-line\">\n            <div class=\"col-sm-12\">\n                <h3>Publish data upload received</h3>\n                <p>topic : <span style=\"font-weight: bold;\">{{msg.topicDataUploadReceived}}</span></p>\n            </div>\n            <div class=\"col-sm-12\">\n                <table class=\"table table-bordered table-hover\">\n                    <thead class=\"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">ts</th>\n                            <th scope=\"col\">fileTransferUid</th>\n                            <th scope=\"col\">fileUploadResult</th>\n                            <th scope=\"col\">details</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">{{msg.dataUploadReceived.ts}}</th>\n                            <td>{{msg.dataUploadReceived.fileTransferUid}}</td>\n                            <td>{{msg.dataUploadReceived.fileUploadResult}}</td>\n                            <td>{{msg.dataUploadReceived.details}}</td>\n\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <!--End Subscribe data upload sent  -->\n\n\n    </div>\n\n\n\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n    <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\n        integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\n        crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"\n        integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\"\n        crossorigin=\"anonymous\"></script>\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"\n        integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\"\n        crossorigin=\"anonymous\"></script>\n\n\n    <!-- Latest compiled and minified CSS -->\n    <link rel=\"stylesheet\"\n        href=\"https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css\">\n\n    <!-- Latest compiled and minified JavaScript -->\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js\"></script>\n\n\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n\n    <script type=\"text/javascript\">\n\n\n        function bytesToSize(bytes) {\n            var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n            if (bytes == 0) return '0 Byte';\n            var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n            return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n        }\n\n        var showInvalidInput = (field, errorContent) => {\n            $(field).text(errorContent);\n        }\n        var hideInvalidInput = (field) => {\n            $(field).text(\"\");\n        }\n\n        var TIME_OUT_ERR_AS_MS = 3000;\n        var CLASS_ERROR_BORDER = \"error-border\";\n        var CLASS_ERROR_NOTIFICATION = \"error-notification\";\n        var CLASS_ERROR_TEXT = \"error-text\";\n\n        // id need to handle\n        var fileNameInput = $(\"#fileName\");\n        var showFileNameSpanId = $(\"#show-file-name\");\n        var saveConfigButton = $(\"#save\");\n        var fileSizeSpanId = $(\"#fileSize\");\n        var fileTypeInputId = $(\"#fileType\");\n        var configFormId = $(\"#config-form\");\n        var configLabelId = $(\"#config-label\");\n        var configFlowDetailLabelId = $(\"#flow-detail-config-label\");\n        var flowDetailId = $(\"#flow-detail\");\n        var selectStatusId = $(\"#selectStatus\");\n        var fileTransferUidInputId = $(\"#fileTransferUid\");\n\n        var settingDataUploadAvailableFormId = $(\"#settingDataUploadAvailableForm\");\n        var settingFetchProgressIconClass = $(\".settingFetchProgress\");\n        var closeSettingFetchProgressIconId = $(\"#closeSettingFetchProgress\");\n        var maxProgressInputId = $(\"#maxProgress\");\n        var timePublishInputId = $(\"#timePublish\");\n        var percentIncermentInputId = $(\"#percentIncerment\");\n        var saveButtonSettingDataUploadAvaiavleId = $(\"#btnSaveSettingUplodaAvaiable\");\n        var fetchProgressInputId = $(\"#fetchProgress\");\n        var fileUploadResultSelectId = $(\"#selectFileUploadResult\");\n        // payload data\n\n        //data upload avaiable\n        var fileName = \"\";\n        var fileData = \"\";\n        var fileSize = \"\";\n        var fileType = 0;\n        var status = 0;\n        var fetchProgress = parseInt(localStorage.getItem(\"fetchProgress\")) || 100;\n        var timePublish = parseInt(localStorage.getItem(\"timePublish\")) || 30;\n        var percentIncerment = parseInt(localStorage.getItem(\"percentIncerment\")) || 20;\n\n        //<=========================== HANDLE AREA ======================================>\n\n        var handleReadFile = function (event) {\n            var file = fileNameInput[0].files[0];\n            if (file) { // if file exist\n\n                fileName = file.name;\n                showFileNameSpanId.text(fileName);\n\n                fileSize = file.size;\n\n                let fileSizeConvert = bytesToSize(file.size)\n                fileSizeSpanId.text(fileSizeConvert)\n\n                var reader = new FileReader();\n                reader.readAsBinaryString(file);\n\n                reader.onload = function () {\n                    fileData = reader.result;\n\n                };\n                reader.onerror = function () {\n                    console.log('Error while reading files');\n                };\n\n            } else {\n                // todo with file is not exist\n\n                // scope.send({ payload: null })\n            }\n\n        }\n\n        //<=========================== END HANDLE AREA ======================================>    \n        fileNameInput.on('change', handleReadFile);\n\n        // (function (scope) {\n\n\n\n        // scope.send({\n        //     dataUploadAvaible,\n        //     dataUploadSent\n        // })\n\n\n        // })(scope);\n\n        var handelConfigLabel = (e) => {\n            // check if is open\n            if (configFormId.css(\"display\") == \"none\") {\n                configFormId.css(\"display\", \"\");\n            } else {\n\n                configFormId.css(\"display\", \"none\");\n            }\n            // configFormId.slideToggle(\"slow\");\n        }\n\n        var handleConfigLabelDetail = (e) => {\n            console.log(\"ok\");\n            // check if is open\n            if (flowDetailId.css(\"display\") == \"none\") {\n                flowDetailId.css(\"display\", \"\");\n            } else {\n\n                flowDetailId.css(\"display\", \"none\");\n            }\n        }\n\n        var handleSettingFetchProgress = function () {\n            $('.modals').addClass('is-visible');\n        }\n\n        function handleCloseSettingFetchProgress() {\n\n            // set last value if incorrect\n            maxProgressInputId.val(fetchProgress);\n            timePublishInputId.val(timePublish);\n            percentIncermentInputId.val(percentIncerment);\n\n            //clear border error in input\n            $(\"#settingDataUploadAvailableForm :input\").each(function (i, e) {\n                var key = $(this).removeClass(CLASS_ERROR_BORDER);\n            })\n            // close modal\n            $('.modals').removeClass('is-visible');\n        }\n        var handleSaveSettingDataUploadAvaiable = function () {\n\n            // $(\"#settingDataUploadAvailableForm :input\").each(function (i, e) {\n            //     var key = $(this).attr(\"id\");\n            //     var value = this.value;\n            //     // validate form\n            //     if (value.length == 0) {\n\n            //     } else {\n\n            //     }\n            // })\n\n            var maxProgressValue = parseInt(maxProgressInputId.val());\n            var timePublishValue = parseInt(timePublishInputId.val());\n            var percentIncermentValue = parseInt(percentIncermentInputId.val());\n\n            // console.log(maxProgress, timePublish, percentIncerment);\n\n            // check user not input \n            if (!maxProgressValue || !timePublishValue || !percentIncermentValue) {\n                if (!maxProgressValue) {\n                    maxProgressInputId.addClass(CLASS_ERROR_BORDER);\n                    var classError = maxProgressInputId.siblings(\".\" + CLASS_ERROR_NOTIFICATION);\n                    classError.addClass(\"is-visible\");\n                    classError.children(\"span\").text(\"Input max progress\");\n                }\n                if (!timePublishValue) {\n                    timePublishInputId.addClass(CLASS_ERROR_BORDER);\n                    var classError = maxProgressInputId.siblings(\".\" + CLASS_ERROR_NOTIFICATION);\n                    classError.addClass(\"is-visible\");\n                    classError.children(\"span\").text(\"Input time publish\");\n                }\n                if (!percentIncermentValue) {\n                    percentIncermentInputId.addClass(CLASS_ERROR_BORDER);\n                    var classError = maxProgressInputId.siblings(\".\" + CLASS_ERROR_NOTIFICATION);\n                    classError.addClass(\"is-visible\");\n                    classError.children(\"span\").text(\"Input percent increment\");\n\n                }\n            } else {\n                // \n                if (percentIncermentValue >= maxProgressValue || maxProgressValue > 100) {\n                    if (percentIncermentValue >= maxProgressValue) {\n                        percentIncermentInputId.addClass(CLASS_ERROR_BORDER);\n                        console.log(\"invalid percentIncerment\");\n                    }\n                    if (maxProgressValue > 100) {\n                        maxProgressInputId.addClass(CLASS_ERROR_BORDER);\n                        console.log(\"invalid max progress \");\n                    }\n\n                } else {\n                    console.log(\"evething is ok\");\n\n                    //clear error border\n                    $(\"#settingDataUploadAvailableForm :input\").each(function (i, e) {\n                        $(this).removeClass(CLASS_ERROR_BORDER);\n                    })\n\n                    // set value to local store\n                    localStorage.setItem(\"fetchProgress\", maxProgressValue);\n                    localStorage.setItem(\"timePublish\", timePublishValue);\n                    localStorage.setItem(\"percentIncerment\", percentIncermentValue);\n\n                    // upldate value \n                    fetchProgress = maxProgressValue;\n                    timePublish = timePublishValue;\n                    percentIncerment = percentIncermentValue;\n                    fetchProgressInputId.val(fetchProgress);\n\n                    //close modal\n                    $('.modals').toggleClass('is-visible');\n\n                }\n            }\n\n\n\n        }\n        function handleChangeFetchProgressInput() {\n\n            let key = $(this).attr(\"id\");\n            let value = this.value\n\n            if (value > 100) {\n                $(this).val(100)\n            } else {\n                localStorage.setItem(key, value);\n                fetchProgress = value;\n                maxProgressInputId.val(value);\n            }\n\n        }\n\n        /**\n         * CLear error in specific group\n         * @param {*} groupName \n         */\n        function clearError(groupName) {\n            $(groupName).find(\".\" + CLASS_ERROR_TEXT).css(\"display\", \"none\");\n            $(groupName).find(\".\" + CLASS_ERROR_BORDER).removeClass(CLASS_ERROR_BORDER);\n        }\n        function handleSaveConfig(e) {\n            fileType = parseInt(fileTypeInputId.val());\n            // check user input\n            if (fileName.length === 0 || fileType < 0 || fileType > 255 || parseInt(fileTransferUidInputId.val()) < 0) {\n                if (fileName.length === 0) {\n\n                    fileNameInput.parent().parent().find(\".\" + CLASS_ERROR_TEXT).css(\"display\", \"inline\");\n                    // fileNameInput.parent().siblings(\"div.\" + CLASS_ERROR_TEXT)[0].style.display = \"inline\";\n\n                } else {\n                    //TO DO with file name exsist\n                    fileNameInput.parent().parent().find(\"div.\" + CLASS_ERROR_TEXT).css(\"display\", \"none\");\n                }\n                if (fileType < 0) {\n                    fileTypeInputId.parent().find(\"div.\" + CLASS_ERROR_TEXT).css(\"display\", \"inline\").text(\"File type must >= 0\");\n                    fileTypeInputId.addClass(CLASS_ERROR_BORDER);\n                } else {\n                    //TO DO with file type  > 0\n                    fileTypeInputId.parent().find(\"div.\" + CLASS_ERROR_TEXT).css(\"display\", \"none\")\n                    fileTypeInputId.removeClass(CLASS_ERROR_BORDER);\n                }\n                if (fileType > 255) {\n                    fileTypeInputId.parent().find(\"div.\" + CLASS_ERROR_TEXT).css(\"display\", \"inline\").text(\"File type must <= 255\");\n                    fileTypeInputId.addClass(CLASS_ERROR_BORDER);\n                } else {\n                    //TO DO with file type  < 0\n                    // fileTypeInputId.siblings(\"div#publishTimeError\").css(\"display\", \"none\")\n                    // fileTypeInputId.removeClass(CLASS_ERROR_BORDER);\n                }\n                if (parseInt(fileTransferUidInputId.val()) < 0) {\n\n                    fileTransferUidInputId.addClass(CLASS_ERROR_BORDER);\n                } else {\n\n                    fileTransferUidInputId.removeClass(CLASS_ERROR_BORDER);\n                }\n\n            } else {\n\n                clearError(\"#\" + configFormId.attr(\"id\"));\n\n                let dataUploadAvaible = {\n                    filename: fileName,\n                    fileData,\n                    fileType: fileType,\n                    fileSize: fileSize,\n                    fileTransferUid: parseInt(fileTransferUidInputId.val()) || 123,\n                    status: selectStatusId.val(),\n                    fetchProgress,\n                    percentIncrement: percentIncerment,\n                    timePublish\n                }\n                let dataUploadSent = {\n                    fileUploadResult: fileUploadResultSelectId.val()\n                }\n\n                let payload = {\n                    dataUploadAvaible,\n                    dataUploadSent\n                }\n\n                //send payload to node -red\n                $.ajax({\n                    url: \"/update-payload\",\n                    type: \"POST\",\n                    data: payload,\n                    cache: false,\n                    success: function (res) {\n                        console.log(res)\n                        if (res.status) {\n                            configFormId.css(\"display\", \"none\");\n                            flowDetailId.css(\"display\", \"\");\n                        } else {\n                            console.log(res.error);\n                        }\n\n                    }\n                });\n            }\n        }\n\n        function getConfig() {\n            $.ajax({\n                url: \"/get-payload-upload\",\n                type: \"GET\",\n                cache: false,\n                success: function (res) {\n                    // get global variable success\n                    if (res.status == true) {\n                        var dataUploadAvailable = res.data.dataUploadAvailable;\n                        var dataUploadSent = res.data.dataUploadSent;\n\n                        // check global variable exsist\n                        if (Object.keys(dataUploadAvailable).length !== 0) {\n                            fileName = dataUploadAvailable.filename;\n                            fileData = dataUploadAvailable.fileData;\n                            fileType = dataUploadAvailable.fileType;\n                            fileSize = dataUploadAvailable.fileSize;\n\n                            console.log(fileName);\n                            showFileNameSpanId.text(fileName);\n\n                            let fileSizeConvert = bytesToSize(fileSize)\n                            fileSizeSpanId.text(fileSizeConvert);\n\n                        }\n                        if (Object.keys(dataUploadSent).length !== 0) {\n\n                        }\n\n                    } else {\n                        // to do with get global variable error\n                    }\n                }\n            });\n        }\n\n        $(document).ready(function () {\n\n            // set value for config data upload avaiable\n            fetchProgressInputId.val(fetchProgress);\n            maxProgressInputId.val(fetchProgress);\n            timePublishInputId.val(timePublish);\n            percentIncermentInputId.val(percentIncerment);\n\n            //get Config from node-red\n            getConfig();\n\n\n            fetchProgressInputId.on(\"change keyup paste\", handleChangeFetchProgressInput)\n\n            configLabelId.on(\"click\", handelConfigLabel)\n\n            configFlowDetailLabelId.on(\"click\", handleConfigLabelDetail);\n\n            settingFetchProgressIconClass.on(\"click\", handleSettingFetchProgress);\n\n            closeSettingFetchProgressIconId.on(\"click\", handleCloseSettingFetchProgress);\n\n            saveButtonSettingDataUploadAvaiavleId.on(\"click\", handleSaveSettingDataUploadAvaiable)\n\n            saveConfigButton.on(\"click\", handleSaveConfig)\n\n        });\n    </script>\n\n</body>\n\n</html>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 2000,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "b2dac295b891f7a4",
        "type": "mqtt out",
        "z": "fb66af5fb4c37143",
        "name": "Publish(\"{trainID}/data-upload/sent\",DATA_UPLOAD_SENT)",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9d49dbb0c964b212",
        "x": 2260,
        "y": 460,
        "wires": []
    },
    {
        "id": "976ccaf69ac34beb",
        "type": "function",
        "z": "fb66af5fb4c37143",
        "name": "Convert Json to Object",
        "func": "let payload = JSON.parse(msg.payload);\nmsg.topicDataUploadSend = msg.topic;\nmsg.dataUploadSend = payload;\n\nglobal.set(\"payloadDataUploadSend\",{\n    payload:payload,\n    topic:msg.topic\n});\n\n// get payload Previous \nvar dataUploadAvaiable = global.get(\"payloadDataUploadAvaiable\");\nvar dataUploadRequest = global.get(\"payloadDataUploadRequest\");\n\nmsg.topicDataUploadRequest = dataUploadRequest.topic;\nmsg.dataUploadRequest = dataUploadRequest.payload;\n\nmsg.dataUploadAvaiable = dataUploadAvaiable.payload;\nmsg.topicDataUploadAvaiable = dataUploadAvaiable.topic;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 460,
        "wires": [
            [
                "b2cfe8a262d0be14",
                "7fb239afe38bfd91"
            ]
        ]
    },
    {
        "id": "7fb239afe38bfd91",
        "type": "function",
        "z": "fb66af5fb4c37143",
        "name": "publish data upload sent",
        "func": "function getCurrentDate() {\n    var myDate = new Date(Date.now());\n    return (myDate.getFullYear() + '-' + ('0' + (myDate.getMonth() + 1)).slice(-2) + '-' + ('0' + myDate.getDate()).slice(-2) + ' ' + myDate.getHours() + ':' + ('0' + (myDate.getMinutes())).slice(-2) + ':' + myDate.getSeconds() + \".\" + myDate.getMilliseconds());\n}\n\n\n\n// get data user input\nvar dataUploadSent = global.get(\"dataUploadSent\");\nvar dataUploadAvaiable = global.get(\"dataUploadAvaiable\");\n\n\n//get train id from data upload request\nlet trainId = msg.topic.substring(0, msg.topic.indexOf(\"/\"));\n\nmsg.topic = trainId + \"/data-upload/sent\";\nmsg.qos = 2;\n\nvar payloadDataUploadSend = JSON.parse(msg.payload);\nvar payload = {\n    ts: getCurrentDate(),\n    fileTransferUid:payloadDataUploadSend.fileTransferUid,\n    storageURL :payloadDataUploadSend.storageURL,\n    fileUploadResult: dataUploadSent.fileUploadResult,\n    fileChecksum :SHA512(dataUploadAvaiable.fileData)\n}\n\n\nglobal.set(\"payloadDataUploadSent\",{\n    topic: msg.topic,\n    payload: payload\n});\n\nmsg.dataUploadSent = payload;\nmsg.topicDataUploadSent = msg.topic;\nmsg.payload = payload;\nreturn msg;\n\n\n/*\n* Secure Hash Algorithm (SHA512)\n* http://www.happycode.info/\n*/\n\nfunction SHA512(str) {\n    function int64(msint_32, lsint_32) {\n        this.highOrder = msint_32;\n        this.lowOrder = lsint_32;\n    }\n\n    var H = [new int64(0x6a09e667, 0xf3bcc908), new int64(0xbb67ae85, 0x84caa73b),\n    new int64(0x3c6ef372, 0xfe94f82b), new int64(0xa54ff53a, 0x5f1d36f1),\n    new int64(0x510e527f, 0xade682d1), new int64(0x9b05688c, 0x2b3e6c1f),\n    new int64(0x1f83d9ab, 0xfb41bd6b), new int64(0x5be0cd19, 0x137e2179)];\n\n    var K = [new int64(0x428a2f98, 0xd728ae22), new int64(0x71374491, 0x23ef65cd),\n    new int64(0xb5c0fbcf, 0xec4d3b2f), new int64(0xe9b5dba5, 0x8189dbbc),\n    new int64(0x3956c25b, 0xf348b538), new int64(0x59f111f1, 0xb605d019),\n    new int64(0x923f82a4, 0xaf194f9b), new int64(0xab1c5ed5, 0xda6d8118),\n    new int64(0xd807aa98, 0xa3030242), new int64(0x12835b01, 0x45706fbe),\n    new int64(0x243185be, 0x4ee4b28c), new int64(0x550c7dc3, 0xd5ffb4e2),\n    new int64(0x72be5d74, 0xf27b896f), new int64(0x80deb1fe, 0x3b1696b1),\n    new int64(0x9bdc06a7, 0x25c71235), new int64(0xc19bf174, 0xcf692694),\n    new int64(0xe49b69c1, 0x9ef14ad2), new int64(0xefbe4786, 0x384f25e3),\n    new int64(0x0fc19dc6, 0x8b8cd5b5), new int64(0x240ca1cc, 0x77ac9c65),\n    new int64(0x2de92c6f, 0x592b0275), new int64(0x4a7484aa, 0x6ea6e483),\n    new int64(0x5cb0a9dc, 0xbd41fbd4), new int64(0x76f988da, 0x831153b5),\n    new int64(0x983e5152, 0xee66dfab), new int64(0xa831c66d, 0x2db43210),\n    new int64(0xb00327c8, 0x98fb213f), new int64(0xbf597fc7, 0xbeef0ee4),\n    new int64(0xc6e00bf3, 0x3da88fc2), new int64(0xd5a79147, 0x930aa725),\n    new int64(0x06ca6351, 0xe003826f), new int64(0x14292967, 0x0a0e6e70),\n    new int64(0x27b70a85, 0x46d22ffc), new int64(0x2e1b2138, 0x5c26c926),\n    new int64(0x4d2c6dfc, 0x5ac42aed), new int64(0x53380d13, 0x9d95b3df),\n    new int64(0x650a7354, 0x8baf63de), new int64(0x766a0abb, 0x3c77b2a8),\n    new int64(0x81c2c92e, 0x47edaee6), new int64(0x92722c85, 0x1482353b),\n    new int64(0xa2bfe8a1, 0x4cf10364), new int64(0xa81a664b, 0xbc423001),\n    new int64(0xc24b8b70, 0xd0f89791), new int64(0xc76c51a3, 0x0654be30),\n    new int64(0xd192e819, 0xd6ef5218), new int64(0xd6990624, 0x5565a910),\n    new int64(0xf40e3585, 0x5771202a), new int64(0x106aa070, 0x32bbd1b8),\n    new int64(0x19a4c116, 0xb8d2d0c8), new int64(0x1e376c08, 0x5141ab53),\n    new int64(0x2748774c, 0xdf8eeb99), new int64(0x34b0bcb5, 0xe19b48a8),\n    new int64(0x391c0cb3, 0xc5c95a63), new int64(0x4ed8aa4a, 0xe3418acb),\n    new int64(0x5b9cca4f, 0x7763e373), new int64(0x682e6ff3, 0xd6b2b8a3),\n    new int64(0x748f82ee, 0x5defb2fc), new int64(0x78a5636f, 0x43172f60),\n    new int64(0x84c87814, 0xa1f0ab72), new int64(0x8cc70208, 0x1a6439ec),\n    new int64(0x90befffa, 0x23631e28), new int64(0xa4506ceb, 0xde82bde9),\n    new int64(0xbef9a3f7, 0xb2c67915), new int64(0xc67178f2, 0xe372532b),\n    new int64(0xca273ece, 0xea26619c), new int64(0xd186b8c7, 0x21c0c207),\n    new int64(0xeada7dd6, 0xcde0eb1e), new int64(0xf57d4f7f, 0xee6ed178),\n    new int64(0x06f067aa, 0x72176fba), new int64(0x0a637dc5, 0xa2c898a6),\n    new int64(0x113f9804, 0xbef90dae), new int64(0x1b710b35, 0x131c471b),\n    new int64(0x28db77f5, 0x23047d84), new int64(0x32caab7b, 0x40c72493),\n    new int64(0x3c9ebe0a, 0x15c9bebc), new int64(0x431d67c4, 0x9c100d4c),\n    new int64(0x4cc5d4be, 0xcb3e42b6), new int64(0x597f299c, 0xfc657e2a),\n    new int64(0x5fcb6fab, 0x3ad6faec), new int64(0x6c44198c, 0x4a475817)];\n\n    var W = new Array(64);\n    var a, b, c, d, e, f, g, h, i, j;\n    var T1, T2;\n    var charsize = 8;\n\n    function utf8_encode(str) {\n        return unescape(encodeURIComponent(str));\n    }\n\n    function str2binb(str) {\n        var bin = [];\n        var mask = (1 << charsize) - 1;\n        var len = str.length * charsize;\n\n        for (var i = 0; i < len; i += charsize) {\n            bin[i >> 5] |= (str.charCodeAt(i / charsize) & mask) << (32 - charsize - (i % 32));\n        }\n\n        return bin;\n    }\n\n    function binb2hex(binarray) {\n        var hex_tab = '0123456789abcdef';\n        var str = '';\n        var length = binarray.length * 4;\n        var srcByte;\n\n        for (var i = 0; i < length; i += 1) {\n            srcByte = binarray[i >> 2] >> ((3 - (i % 4)) * 8);\n            str += hex_tab.charAt((srcByte >> 4) & 0xF) + hex_tab.charAt(srcByte & 0xF);\n        }\n\n        return str;\n    }\n\n    function safe_add_2(x, y) {\n        var lsw, msw, lowOrder, highOrder;\n\n        lsw = (x.lowOrder & 0xFFFF) + (y.lowOrder & 0xFFFF);\n        msw = (x.lowOrder >>> 16) + (y.lowOrder >>> 16) + (lsw >>> 16);\n        lowOrder = ((msw & 0xFFFF) << 16) | (lsw & 0xFFFF);\n\n        lsw = (x.highOrder & 0xFFFF) + (y.highOrder & 0xFFFF) + (msw >>> 16);\n        msw = (x.highOrder >>> 16) + (y.highOrder >>> 16) + (lsw >>> 16);\n        highOrder = ((msw & 0xFFFF) << 16) | (lsw & 0xFFFF);\n\n        return new int64(highOrder, lowOrder);\n    }\n\n    function safe_add_4(a, b, c, d) {\n        var lsw, msw, lowOrder, highOrder;\n\n        lsw = (a.lowOrder & 0xFFFF) + (b.lowOrder & 0xFFFF) + (c.lowOrder & 0xFFFF) + (d.lowOrder & 0xFFFF);\n        msw = (a.lowOrder >>> 16) + (b.lowOrder >>> 16) + (c.lowOrder >>> 16) + (d.lowOrder >>> 16) + (lsw >>> 16);\n        lowOrder = ((msw & 0xFFFF) << 16) | (lsw & 0xFFFF);\n\n        lsw = (a.highOrder & 0xFFFF) + (b.highOrder & 0xFFFF) + (c.highOrder & 0xFFFF) + (d.highOrder & 0xFFFF) + (msw >>> 16);\n        msw = (a.highOrder >>> 16) + (b.highOrder >>> 16) + (c.highOrder >>> 16) + (d.highOrder >>> 16) + (lsw >>> 16);\n        highOrder = ((msw & 0xFFFF) << 16) | (lsw & 0xFFFF);\n\n        return new int64(highOrder, lowOrder);\n    }\n\n    function safe_add_5(a, b, c, d, e) {\n        var lsw, msw, lowOrder, highOrder;\n\n        lsw = (a.lowOrder & 0xFFFF) + (b.lowOrder & 0xFFFF) + (c.lowOrder & 0xFFFF) + (d.lowOrder & 0xFFFF) + (e.lowOrder & 0xFFFF);\n        msw = (a.lowOrder >>> 16) + (b.lowOrder >>> 16) + (c.lowOrder >>> 16) + (d.lowOrder >>> 16) + (e.lowOrder >>> 16) + (lsw >>> 16);\n        lowOrder = ((msw & 0xFFFF) << 16) | (lsw & 0xFFFF);\n\n        lsw = (a.highOrder & 0xFFFF) + (b.highOrder & 0xFFFF) + (c.highOrder & 0xFFFF) + (d.highOrder & 0xFFFF) + (e.highOrder & 0xFFFF) + (msw >>> 16);\n        msw = (a.highOrder >>> 16) + (b.highOrder >>> 16) + (c.highOrder >>> 16) + (d.highOrder >>> 16) + (e.highOrder >>> 16) + (lsw >>> 16);\n        highOrder = ((msw & 0xFFFF) << 16) | (lsw & 0xFFFF);\n\n        return new int64(highOrder, lowOrder);\n    }\n\n    function maj(x, y, z) {\n        return new int64(\n            (x.highOrder & y.highOrder) ^ (x.highOrder & z.highOrder) ^ (y.highOrder & z.highOrder),\n            (x.lowOrder & y.lowOrder) ^ (x.lowOrder & z.lowOrder) ^ (y.lowOrder & z.lowOrder)\n        );\n    }\n\n    function ch(x, y, z) {\n        return new int64(\n            (x.highOrder & y.highOrder) ^ (~x.highOrder & z.highOrder),\n            (x.lowOrder & y.lowOrder) ^ (~x.lowOrder & z.lowOrder)\n        );\n    }\n\n    function rotr(x, n) {\n        if (n <= 32) {\n            return new int64(\n                (x.highOrder >>> n) | (x.lowOrder << (32 - n)),\n                (x.lowOrder >>> n) | (x.highOrder << (32 - n))\n            );\n        } else {\n            return new int64(\n                (x.lowOrder >>> n) | (x.highOrder << (32 - n)),\n                (x.highOrder >>> n) | (x.lowOrder << (32 - n))\n            );\n        }\n    }\n\n    function sigma0(x) {\n        var rotr28 = rotr(x, 28);\n        var rotr34 = rotr(x, 34);\n        var rotr39 = rotr(x, 39);\n\n        return new int64(\n            rotr28.highOrder ^ rotr34.highOrder ^ rotr39.highOrder,\n            rotr28.lowOrder ^ rotr34.lowOrder ^ rotr39.lowOrder\n        );\n    }\n\n    function sigma1(x) {\n        var rotr14 = rotr(x, 14);\n        var rotr18 = rotr(x, 18);\n        var rotr41 = rotr(x, 41);\n\n        return new int64(\n            rotr14.highOrder ^ rotr18.highOrder ^ rotr41.highOrder,\n            rotr14.lowOrder ^ rotr18.lowOrder ^ rotr41.lowOrder\n        );\n    }\n\n    function gamma0(x) {\n        var rotr1 = rotr(x, 1), rotr8 = rotr(x, 8), shr7 = shr(x, 7);\n\n        return new int64(\n            rotr1.highOrder ^ rotr8.highOrder ^ shr7.highOrder,\n            rotr1.lowOrder ^ rotr8.lowOrder ^ shr7.lowOrder\n        );\n    }\n\n    function gamma1(x) {\n        var rotr19 = rotr(x, 19);\n        var rotr61 = rotr(x, 61);\n        var shr6 = shr(x, 6);\n\n        return new int64(\n            rotr19.highOrder ^ rotr61.highOrder ^ shr6.highOrder,\n            rotr19.lowOrder ^ rotr61.lowOrder ^ shr6.lowOrder\n        );\n    }\n\n    function shr(x, n) {\n        if (n <= 32) {\n            return new int64(\n                x.highOrder >>> n,\n                x.lowOrder >>> n | (x.highOrder << (32 - n))\n            );\n        } else {\n            return new int64(\n                0,\n                x.highOrder << (32 - n)\n            );\n        }\n    }\n\n    str = utf8_encode(str);\n    strlen = str.length * charsize;\n    str = str2binb(str);\n\n    str[strlen >> 5] |= 0x80 << (24 - strlen % 32);\n    str[(((strlen + 128) >> 10) << 5) + 31] = strlen;\n\n    for (var i = 0; i < str.length; i += 32) {\n        a = H[0];\n        b = H[1];\n        c = H[2];\n        d = H[3];\n        e = H[4];\n        f = H[5];\n        g = H[6];\n        h = H[7];\n\n        for (var j = 0; j < 80; j++) {\n            if (j < 16) {\n                W[j] = new int64(str[j * 2 + i], str[j * 2 + i + 1]);\n            } else {\n                W[j] = safe_add_4(gamma1(W[j - 2]), W[j - 7], gamma0(W[j - 15]), W[j - 16]);\n            }\n\n            T1 = safe_add_5(h, sigma1(e), ch(e, f, g), K[j], W[j]);\n            T2 = safe_add_2(sigma0(a), maj(a, b, c));\n            h = g;\n            g = f;\n            f = e;\n            e = safe_add_2(d, T1);\n            d = c;\n            c = b;\n            b = a;\n            a = safe_add_2(T1, T2);\n        }\n\n        H[0] = safe_add_2(a, H[0]);\n        H[1] = safe_add_2(b, H[1]);\n        H[2] = safe_add_2(c, H[2]);\n        H[3] = safe_add_2(d, H[3]);\n        H[4] = safe_add_2(e, H[4]);\n        H[5] = safe_add_2(f, H[5]);\n        H[6] = safe_add_2(g, H[6]);\n        H[7] = safe_add_2(h, H[7]);\n    }\n\n    var binarray = [];\n    for (var i = 0; i < H.length; i++) {\n        binarray.push(H[i].highOrder);\n        binarray.push(H[i].lowOrder);\n    }\n    return binb2hex(binarray);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 460,
        "wires": [
            [
                "b2dac295b891f7a4",
                "bc67a4b0c7709fc8",
                "b2cfe8a262d0be14",
                "7e089952f66e3f81"
            ]
        ]
    },
    {
        "id": "75d7831715938b43",
        "type": "debug",
        "z": "fb66af5fb4c37143",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 600,
        "wires": []
    },
    {
        "id": "c5ea5cd56cf39ae2",
        "type": "catch",
        "z": "fb66af5fb4c37143",
        "name": "",
        "scope": [
            "15ce76617df34353"
        ],
        "uncaught": false,
        "x": 1240,
        "y": 600,
        "wires": [
            [
                "75d7831715938b43"
            ]
        ]
    },
    {
        "id": "d528ca0d48ef15e9",
        "type": "mqtt in",
        "z": "fb66af5fb4c37143",
        "name": "Subscribe(\"{trainID}/data-upload/send\",DATA_UPLOAD_RECEIVED)",
        "topic": "aemr_810001/data-upload/received",
        "qos": "1",
        "datatype": "auto",
        "broker": "9d49dbb0c964b212",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1360,
        "y": 140,
        "wires": [
            [
                "e3a916e43f71dc4f"
            ]
        ]
    },
    {
        "id": "e3a916e43f71dc4f",
        "type": "function",
        "z": "fb66af5fb4c37143",
        "name": "Convert Json to Object",
        "func": "let payload = JSON.parse(msg.payload);\nmsg.topicDataUploadReceived = msg.topic;\nmsg.dataUploadReceived = payload;\n\n\n// get payload Previous \nvar dataUploadAvaiable = global.get(\"payloadDataUploadAvaiable\");\nvar dataUploadRequest = global.get(\"payloadDataUploadRequest\");\nvar dataUploadSend = global.get(\"payloadDataUploadSend\");\nvar dataUploadSent = global.get(\"payloadDataUploadSent\");\n\nmsg.topicDataUploadRequest = dataUploadRequest.topic;\nmsg.dataUploadRequest = dataUploadRequest.payload;\n\nmsg.dataUploadAvaiable = dataUploadAvaiable.payload;\nmsg.topicDataUploadAvaiable = dataUploadAvaiable.topic;\n\nmsg.dataUploadSend = dataUploadSend.payload;\nmsg.topicDataUploadSend = dataUploadSend.topic;\n\nmsg.dataUploadSent = dataUploadSent.payload;\nmsg.topicDataUploadSent = dataUploadSent.topic;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1760,
        "y": 140,
        "wires": [
            [
                "b2cfe8a262d0be14"
            ]
        ]
    },
    {
        "id": "7e089952f66e3f81",
        "type": "debug",
        "z": "fb66af5fb4c37143",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1800,
        "y": 560,
        "wires": []
    },
    {
        "id": "38aa9e06b94845c7",
        "type": "inject",
        "z": "fb66af5fb4c37143",
        "name": "Get global ",
        "props": [
            {
                "p": "payload.dataUploadAvaiable",
                "v": "dataUploadAvaiable",
                "vt": "global"
            },
            {
                "p": "payload.dataUploadSent",
                "v": "dataUploadSent",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 320,
        "y": 1000,
        "wires": [
            [
                "87340531695b8231"
            ]
        ]
    },
    {
        "id": "87340531695b8231",
        "type": "debug",
        "z": "fb66af5fb4c37143",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1000,
        "wires": []
    },
    {
        "id": "f10d6edec169e3fa",
        "type": "http in",
        "z": "fb66af5fb4c37143",
        "name": "",
        "url": "/get-payload-upload",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 350,
        "y": 880,
        "wires": [
            [
                "3aafaca076abdd5d"
            ]
        ]
    },
    {
        "id": "3aafaca076abdd5d",
        "type": "function",
        "z": "fb66af5fb4c37143",
        "name": "return payload to client",
        "func": "try {\n\n  var dataUploadAvailable =  global.get(\"dataUploadAvaiable\") || {};\n  var dataUploadSent =   global.get(\"dataUploadSent\") || {};\n    \n    msg.payload ={};\n    msg.payload.status =true;\n    var data = {\n        dataUploadAvailable : dataUploadAvailable,\n        dataUploadSent : dataUploadSent\n    }\n    msg.payload.data = data;\n    return msg;\n} catch (e) {\n    msg.payload ={};\n    msg.payload.status = false;\n    \n    msg.payload.error = e + \"\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 880,
        "wires": [
            [
                "246c1eb9cf14d9c4"
            ]
        ]
    },
    {
        "id": "246c1eb9cf14d9c4",
        "type": "http response",
        "z": "fb66af5fb4c37143",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 990,
        "y": 880,
        "wires": []
    },
    {
        "id": "60613857d9bff1f7",
        "type": "inject",
        "z": "fb66af5fb4c37143",
        "name": "Clear global ",
        "props": [
            {
                "p": "payload.dataUploadAvaiable",
                "v": "dataUploadAvaiable",
                "vt": "global"
            },
            {
                "p": "payload.dataUploadSent",
                "v": "dataUploadSent",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 330,
        "y": 1060,
        "wires": [
            [
                "a7206eeab07af17d"
            ]
        ]
    },
    {
        "id": "a7206eeab07af17d",
        "type": "function",
        "z": "fb66af5fb4c37143",
        "name": "Handle Clear Global Variable",
        "func": "global.set(\"dataUploadAvaiable\", {});\nglobal.set(\"dataUploadSent\", {});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1060,
        "wires": [
            [
                "49747dc3ee825b07"
            ]
        ]
    },
    {
        "id": "49747dc3ee825b07",
        "type": "debug",
        "z": "fb66af5fb4c37143",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 1060,
        "wires": []
    }
]